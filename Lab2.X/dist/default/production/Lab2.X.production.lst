

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jul 28 09:15:40 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  000E                     	;# 
   479  000F                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0014                     	;# 
   485  0015                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  001D                     	;# 
   496  001E                     	;# 
   497  001F                     	;# 
   498  0081                     	;# 
   499  0085                     	;# 
   500  0086                     	;# 
   501  0087                     	;# 
   502  0088                     	;# 
   503  0089                     	;# 
   504  008C                     	;# 
   505  008D                     	;# 
   506  008E                     	;# 
   507  008F                     	;# 
   508  0090                     	;# 
   509  0091                     	;# 
   510  0092                     	;# 
   511  0093                     	;# 
   512  0093                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0095                     	;# 
   516  0096                     	;# 
   517  0097                     	;# 
   518  0098                     	;# 
   519  0099                     	;# 
   520  009A                     	;# 
   521  009B                     	;# 
   522  009C                     	;# 
   523  009D                     	;# 
   524  009E                     	;# 
   525  009F                     	;# 
   526  0105                     	;# 
   527  0107                     	;# 
   528  0108                     	;# 
   529  0109                     	;# 
   530  010C                     	;# 
   531  010C                     	;# 
   532  010D                     	;# 
   533  010E                     	;# 
   534  010F                     	;# 
   535  0185                     	;# 
   536  0187                     	;# 
   537  0188                     	;# 
   538  0189                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541                           
   542                           	psect	idataBANK0
   543  06DA                     __pidataBANK0:
   544                           
   545                           ;initializer for _T
   546  06DA  3401               	retlw	1
   547  0018                     _RCSTAbits	set	24
   548  0009                     _PORTEbits	set	9
   549  0019                     _TXREG	set	25
   550  001F                     _ADCON0bits	set	31
   551  0009                     _PORTE	set	9
   552  0008                     _PORTD	set	8
   553  0007                     _PORTC	set	7
   554  0006                     _PORTB	set	6
   555  0005                     _PORTA	set	5
   556  001A                     _RCREG	set	26
   557  001E                     _ADRESH	set	30
   558  000C                     _PIR1bits	set	12
   559  0001                     _TMR0	set	1
   560  000B                     _INTCONbits	set	11
   561  0099                     _SPBRG	set	153
   562  009A                     _SPBRGH	set	154
   563  0098                     _TXSTAbits	set	152
   564  0081                     _OPTION_REG	set	129
   565  009F                     _ADCON1	set	159
   566  008F                     _OSCCONbits	set	143
   567  0089                     _TRISE	set	137
   568  0088                     _TRISD	set	136
   569  0087                     _TRISC	set	135
   570  0086                     _TRISB	set	134
   571  0085                     _TRISA	set	133
   572  008C                     _PIE1bits	set	140
   573  0187                     _BAUDCTLbits	set	391
   574  0189                     _ANSELH	set	393
   575  0188                     _ANSEL	set	392
   576                           
   577                           	psect	strings
   578  0636                     __pstrings:
   579  0636                     stringtab:
   580  0636                     __stringtab:
   581                           
   582                           ;	String table - string pointers are 1 byte each
   583  0636  1BFF               	btfsc	btemp+1,7
   584  0637  2E40               	ljmp	stringcode
   585  0638  1383               	bcf	3,7
   586  0639  187F               	btfsc	btemp+1,0
   587  063A  1783               	bsf	3,7
   588  063B  0800               	movf	0,w
   589  063C  0A84               	incf	4,f
   590  063D  1903               	skipnz
   591  063E  0AFF               	incf	btemp+1,f
   592  063F  0008               	return
   593  0640                     stringcode:
   594  0640                     stringdir:
   595  0640  3006               	movlw	high stringdir
   596  0641  008A               	movwf	10
   597  0642  0804               	movf	4,w
   598  0643  0A84               	incf	4,f
   599  0644  0782               	addwf	2,f
   600  0645                     __stringbase:
   601  0645  3400               	retlw	0
   602  0646                     __end_of__stringtab:
   603  0646                     STR_1:
   604  0646  3453               	retlw	83	;'S'
   605  0647  3431               	retlw	49	;'1'
   606  0648  3420               	retlw	32	;' '
   607  0649  3420               	retlw	32	;' '
   608  064A  3420               	retlw	32	;' '
   609  064B  3420               	retlw	32	;' '
   610  064C  3453               	retlw	83	;'S'
   611  064D  3432               	retlw	50	;'2'
   612  064E  3420               	retlw	32	;' '
   613  064F  3420               	retlw	32	;' '
   614  0650  3420               	retlw	32	;' '
   615  0651  3420               	retlw	32	;' '
   616  0652  3453               	retlw	83	;'S'
   617  0653  3433               	retlw	51	;'3'
   618  0654  3400               	retlw	0
   619                           
   620                           	psect	cinit
   621  000F                     start_initialization:	
   622                           ; #config settings
   623                           
   624  000F                     __initialization:
   625                           
   626                           ; Initialize objects allocated to BANK0
   627  000F  120A  118A  26DA  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   628  0014  00D2               	movwf	__pdataBANK0& (0+127)
   629                           
   630                           ; Clear objects allocated to BANK0
   631  0015  1383               	bcf	3,7	;select IRP bank0
   632  0016  303B               	movlw	low __pbssBANK0
   633  0017  0084               	movwf	4
   634  0018  3052               	movlw	low (__pbssBANK0+23)
   635  0019  120A  118A  26CC  120A  118A  	fcall	clear_ram0
   636                           
   637                           ; Clear objects allocated to COMMON
   638  001E  01F6               	clrf	__pbssCOMMON& (0+127)
   639  001F  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   640  0020  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   641  0021  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   642  0022                     end_of_initialization:	
   643                           ;End of C runtime variable initialization code
   644                           
   645  0022                     __end_of__initialization:
   646  0022  0183               	clrf	3
   647  0023  120A  118A  2B4E   	ljmp	_main	;jump to C main() function
   648                           
   649                           	psect	bssCOMMON
   650  0076                     __pbssCOMMON:
   651  0076                     _signo:
   652  0076                     	ds	1
   653  0077                     _toggleTX:
   654  0077                     	ds	1
   655  0078                     _Cen1:
   656  0078                     	ds	1
   657  0079                     _v1:
   658  0079                     	ds	1
   659                           
   660                           	psect	bssBANK0
   661  003B                     __pbssBANK0:
   662  003B                     _CONT:
   663  003B                     	ds	1
   664  003C                     _res:
   665  003C                     	ds	1
   666  003D                     _sum:
   667  003D                     	ds	1
   668  003E                     _AU3:
   669  003E                     	ds	1
   670  003F                     _AU2:
   671  003F                     	ds	1
   672  0040                     _AU1:
   673  0040                     	ds	1
   674  0041                     _AD3:
   675  0041                     	ds	1
   676  0042                     _AD2:
   677  0042                     	ds	1
   678  0043                     _AD1:
   679  0043                     	ds	1
   680  0044                     _AC3:
   681  0044                     	ds	1
   682  0045                     _AC2:
   683  0045                     	ds	1
   684  0046                     _AC1:
   685  0046                     	ds	1
   686  0047                     _Un3:
   687  0047                     	ds	1
   688  0048                     _Un2:
   689  0048                     	ds	1
   690  0049                     _Un1:
   691  0049                     	ds	1
   692  004A                     _Dec3:
   693  004A                     	ds	1
   694  004B                     _Dec2:
   695  004B                     	ds	1
   696  004C                     _Dec1:
   697  004C                     	ds	1
   698  004D                     _Cen3:
   699  004D                     	ds	1
   700  004E                     _Cen2:
   701  004E                     	ds	1
   702  004F                     _anlec:
   703  004F                     	ds	1
   704  0050                     _nowadc:
   705  0050                     	ds	1
   706  0051                     _v2:
   707  0051                     	ds	1
   708                           
   709                           	psect	dataBANK0
   710  0052                     __pdataBANK0:
   711  0052                     _T:
   712  0052                     	ds	1
   713                           
   714                           	psect	clrtext
   715  06CC                     clear_ram0:	
   716                           ;	Called with FSR containing the base address, and
   717                           ;	W with the last address+1
   718                           
   719  06CC  0064               	clrwdt	;clear the watchdog before getting into this loop
   720  06CD                     clrloop0:
   721  06CD  0180               	clrf	0	;clear RAM location pointed to by FSR
   722  06CE  0A84               	incf	4,f	;increment pointer
   723  06CF  0604               	xorwf	4,w	;XOR with final address
   724  06D0  1903               	btfsc	3,2	;have we reached the end yet?
   725  06D1  3400               	retlw	0	;all done for this memory range, return
   726  06D2  0604               	xorwf	4,w	;XOR again to restore value
   727  06D3  2ECD               	goto	clrloop0	;do the next byte
   728                           
   729                           	psect	cstackCOMMON
   730  0070                     __pcstackCOMMON:
   731  0070                     ?_envio:
   732  0070                     ??_envio:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_Setup:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_USARTcon:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_Lcd_Init:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_ADCL:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_CONTADOR:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_LECT1:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_LECT2:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_LECT3:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_num_ascii:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_ISR:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_main:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_Lcd_Port:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_Lcd_Cmd:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_Lcd_Write_Char:	
   775                           ; 1 bytes @ 0x0
   776                           
   777                           
   778                           ; 1 bytes @ 0x0
   779  0070                     	ds	1
   780  0071                     ??_ISR:
   781                           
   782                           ; 1 bytes @ 0x1
   783  0071                     	ds	3
   784  0074                     ??_USARTcon:
   785  0074                     ?_conver:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0074                     ??_CONTADOR:	
   789                           ; 1 bytes @ 0x4
   790                           
   791  0074                     ?_ADC_init:	
   792                           ; 1 bytes @ 0x4
   793                           
   794  0074                     ??_num_ascii:	
   795                           ; 1 bytes @ 0x4
   796                           
   797  0074                     ??_Lcd_Port:	
   798                           ; 1 bytes @ 0x4
   799                           
   800  0074                     ??___wmul:	
   801                           ; 1 bytes @ 0x4
   802                           
   803  0074                     ?___bmul:	
   804                           ; 1 bytes @ 0x4
   805                           
   806  0074                     conver@AD3:	
   807                           ; 1 bytes @ 0x4
   808                           
   809  0074                     ADC_init@chan:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0074                     Lcd_Port@a:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0074                     ___bmul@multiplicand:	
   816                           ; 1 bytes @ 0x4
   817                           
   818  0074                     ___wmul@product:	
   819                           ; 1 bytes @ 0x4
   820                           
   821                           
   822                           ; 2 bytes @ 0x4
   823  0074                     	ds	1
   824  0075                     ??_Lcd_Write_Char:
   825  0075                     ??___bmul:	
   826                           ; 1 bytes @ 0x5
   827                           
   828  0075                     conver@AU3:	
   829                           ; 1 bytes @ 0x5
   830                           
   831  0075                     ADC_init@vel:	
   832                           ; 1 bytes @ 0x5
   833                           
   834  0075                     Lcd_Cmd@a:	
   835                           ; 1 bytes @ 0x5
   836                           
   837                           
   838                           ; 1 bytes @ 0x5
   839  0075                     	ds	1
   840  0076                     ??_Lcd_Init:
   841                           
   842                           	psect	cstackBANK0
   843  0020                     __pcstackBANK0:	
   844                           ; 1 bytes @ 0x6
   845                           
   846  0020                     ??_conver:
   847  0020                     ??_ADC_init:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0020                     ??_Lcd_Cmd:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0020                     ?___wmul:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0020                     num_ascii@num:	
   857                           ; 2 bytes @ 0x0
   858                           
   859  0020                     Lcd_Write_Char@a:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0020                     ___bmul@product:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0020                     ___wmul@multiplier:	
   866                           ; 1 bytes @ 0x0
   867                           
   868                           
   869                           ; 2 bytes @ 0x0
   870  0020                     	ds	1
   871  0021                     conver@AC3:
   872  0021                     ___bmul@multiplier:	
   873                           ; 1 bytes @ 0x1
   874                           
   875                           
   876                           ; 1 bytes @ 0x1
   877  0021                     	ds	1
   878  0022                     ??_Setup:
   879  0022                     ?_Lcd_Set_Cursor:	
   880                           ; 1 bytes @ 0x2
   881                           
   882  0022                     ??_ADCL:	
   883                           ; 1 bytes @ 0x2
   884                           
   885  0022                     Lcd_Set_Cursor@b:	
   886                           ; 1 bytes @ 0x2
   887                           
   888  0022                     ___wmul@multiplicand:	
   889                           ; 1 bytes @ 0x2
   890                           
   891  0022                     conver@temporal:	
   892                           ; 2 bytes @ 0x2
   893                           
   894                           
   895                           ; 16 bytes @ 0x2
   896  0022                     	ds	1
   897  0023                     ??_Lcd_Set_Cursor:
   898                           
   899                           ; 1 bytes @ 0x3
   900  0023                     	ds	1
   901  0024                     ?___awdiv:
   902  0024                     Lcd_Set_Cursor@a:	
   903                           ; 2 bytes @ 0x4
   904                           
   905  0024                     ___awdiv@divisor:	
   906                           ; 1 bytes @ 0x4
   907                           
   908                           
   909                           ; 2 bytes @ 0x4
   910  0024                     	ds	1
   911  0025                     Lcd_Set_Cursor@temp:
   912                           
   913                           ; 1 bytes @ 0x5
   914  0025                     	ds	1
   915  0026                     ___awdiv@dividend:
   916                           
   917                           ; 2 bytes @ 0x6
   918  0026                     	ds	2
   919  0028                     ??___awdiv:
   920                           
   921                           ; 1 bytes @ 0x8
   922  0028                     	ds	1
   923  0029                     ___awdiv@counter:
   924                           
   925                           ; 1 bytes @ 0x9
   926  0029                     	ds	1
   927  002A                     ___awdiv@sign:
   928                           
   929                           ; 1 bytes @ 0xA
   930  002A                     	ds	1
   931  002B                     ___awdiv@quotient:
   932                           
   933                           ; 2 bytes @ 0xB
   934  002B                     	ds	2
   935  002D                     ??_LECT1:
   936  002D                     ??_LECT2:	
   937                           ; 1 bytes @ 0xD
   938                           
   939  002D                     ??_LECT3:	
   940                           ; 1 bytes @ 0xD
   941                           
   942                           
   943                           ; 1 bytes @ 0xD
   944  002D                     	ds	5
   945  0032                     ?_Lcd_Write_String:
   946  0032                     Lcd_Write_String@a:	
   947                           ; 1 bytes @ 0x12
   948                           
   949                           
   950                           ; 2 bytes @ 0x12
   951  0032                     	ds	2
   952  0034                     ??_Lcd_Write_String:
   953                           
   954                           ; 1 bytes @ 0x14
   955  0034                     	ds	1
   956  0035                     _LECT2$1143:
   957                           
   958                           ; 2 bytes @ 0x15
   959  0035                     	ds	2
   960  0037                     Lcd_Write_String@i:
   961                           
   962                           ; 2 bytes @ 0x17
   963  0037                     	ds	2
   964  0039                     ??_main:
   965                           
   966                           ; 1 bytes @ 0x19
   967  0039                     	ds	2
   968                           
   969                           	psect	maintext
   970  034E                     __pmaintext:	
   971 ;;
   972 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   973 ;;
   974 ;; *************** function _main *****************
   975 ;; Defined at:
   976 ;;		line 97 in file "main.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : B00/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   990 ;;      Params:         0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0
   992 ;;      Temps:          0       2       0       0       0
   993 ;;      Totals:         0       2       0       0       0
   994 ;;Total ram usage:        2 bytes
   995 ;; Hardware stack levels required when called: 5
   996 ;; This function calls:
   997 ;;		_ADCL
   998 ;;		_CONTADOR
   999 ;;		_LECT1
  1000 ;;		_LECT2
  1001 ;;		_LECT3
  1002 ;;		_Lcd_Init
  1003 ;;		_Lcd_Set_Cursor
  1004 ;;		_Lcd_Write_String
  1005 ;;		_Setup
  1006 ;;		_USARTcon
  1007 ;;		_conver
  1008 ;; This function is called by:
  1009 ;;		Startup code after reset
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _main
  1015  034E                     _main:
  1016  034E                     l2237:	
  1017                           ;incstack = 0
  1018                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1019                           
  1020                           
  1021                           ;main.c: 98:     Setup();
  1022  034E  120A  118A  2542  120A  118A  	fcall	_Setup
  1023  0353                     l2239:
  1024                           
  1025                           ;main.c: 99:     USARTcon();
  1026  0353  120A  118A  26A0  120A  118A  	fcall	_USARTcon
  1027  0358                     l2241:
  1028                           
  1029                           ;main.c: 100:     Lcd_Init();
  1030  0358  120A  118A  2670  120A  118A  	fcall	_Lcd_Init
  1031  035D                     l2243:
  1032                           
  1033                           ;main.c: 102:         Lcd_Set_Cursor(1,1);
  1034  035D  1283               	bcf	3,5	;RP0=0, select bank0
  1035  035E  1303               	bcf	3,6	;RP1=0, select bank0
  1036  035F  01A2               	clrf	Lcd_Set_Cursor@b
  1037  0360  0AA2               	incf	Lcd_Set_Cursor@b,f
  1038  0361  3001               	movlw	1
  1039  0362  120A  118A  2610  120A  118A  	fcall	_Lcd_Set_Cursor
  1040  0367                     l2245:
  1041                           
  1042                           ;main.c: 103:         Lcd_Write_String("S1    S2    S3");
  1043  0367  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1044  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1045  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1046  036A  00B2               	movwf	Lcd_Write_String@a
  1047  036B  3080               	movlw	128
  1048  036C  00B3               	movwf	Lcd_Write_String@a+1
  1049  036D  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
  1050  0372                     l2247:
  1051                           
  1052                           ;main.c: 104:         Lcd_Set_Cursor(2,1);
  1053  0372  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0373  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0374  01A2               	clrf	Lcd_Set_Cursor@b
  1056  0375  0AA2               	incf	Lcd_Set_Cursor@b,f
  1057  0376  3002               	movlw	2
  1058  0377  120A  118A  2610  120A  118A  	fcall	_Lcd_Set_Cursor
  1059  037C                     l2249:
  1060                           
  1061                           ;main.c: 105:         Lcd_Write_String(conver(AC3, AD3, AU3));
  1062  037C  1283               	bcf	3,5	;RP0=0, select bank0
  1063  037D  1303               	bcf	3,6	;RP1=0, select bank0
  1064  037E  0841               	movf	_AD3,w
  1065  037F  00B9               	movwf	??_main
  1066  0380  0839               	movf	??_main,w
  1067  0381  00F4               	movwf	conver@AD3
  1068  0382  083E               	movf	_AU3,w
  1069  0383  00BA               	movwf	??_main+1
  1070  0384  083A               	movf	??_main+1,w
  1071  0385  00F5               	movwf	conver@AU3
  1072  0386  0844               	movf	_AC3,w
  1073  0387  120A  118A  2478  120A  118A  	fcall	_conver
  1074  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1075  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1076  038E  00B2               	movwf	Lcd_Write_String@a
  1077  038F  3000               	movlw	0
  1078  0390  00B3               	movwf	Lcd_Write_String@a+1
  1079  0391  120A  118A  2432  120A  118A  	fcall	_Lcd_Write_String
  1080                           
  1081                           ;main.c: 106:         ADCL();
  1082  0396  120A  118A  24BD  120A  118A  	fcall	_ADCL
  1083  039B                     l2251:
  1084                           
  1085                           ;main.c: 107:         if(signo != 13 && signo != 43 && signo != 45){
  1086  039B  300D               	movlw	13
  1087  039C  0676               	xorwf	_signo,w
  1088  039D  1903               	btfsc	3,2
  1089  039E  2BA0               	goto	u1121
  1090  039F  2BA1               	goto	u1120
  1091  03A0                     u1121:
  1092  03A0  2BB1               	goto	l2259
  1093  03A1                     u1120:
  1094  03A1                     l2253:
  1095  03A1  302B               	movlw	43
  1096  03A2  0676               	xorwf	_signo,w
  1097  03A3  1903               	btfsc	3,2
  1098  03A4  2BA6               	goto	u1131
  1099  03A5  2BA7               	goto	u1130
  1100  03A6                     u1131:
  1101  03A6  2BB1               	goto	l2259
  1102  03A7                     u1130:
  1103  03A7                     l2255:
  1104  03A7  302D               	movlw	45
  1105  03A8  0676               	xorwf	_signo,w
  1106  03A9  1903               	btfsc	3,2
  1107  03AA  2BAC               	goto	u1141
  1108  03AB  2BAD               	goto	u1140
  1109  03AC                     u1141:
  1110  03AC  2BB1               	goto	l2259
  1111  03AD                     u1140:
  1112  03AD                     l2257:
  1113                           
  1114                           ;main.c: 108:             sum = 0;
  1115  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  1116  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  1117  03AF  01BD               	clrf	_sum
  1118                           
  1119                           ;main.c: 109:             res = 0;
  1120  03B0  01BC               	clrf	_res
  1121  03B1                     l2259:
  1122                           
  1123                           ;main.c: 111:         CONTADOR();
  1124  03B1  120A  118A  257F  120A  118A  	fcall	_CONTADOR
  1125  03B6                     l2261:
  1126                           
  1127                           ;main.c: 112:         LECT1();
  1128  03B6  120A  118A  20F5  120A  118A  	fcall	_LECT1
  1129  03BB                     l2263:
  1130                           
  1131                           ;main.c: 113:         LECT2();
  1132  03BB  120A  118A  2026  120A  118A  	fcall	_LECT2
  1133  03C0                     l2265:
  1134                           
  1135                           ;main.c: 114:         LECT3();
  1136  03C0  120A  118A  22CE  120A  118A  	fcall	_LECT3
  1137  03C5  2B5D               	goto	l2243
  1138  03C6  120A  118A  280C   	ljmp	start
  1139  03C9                     __end_of_main:
  1140                           
  1141                           	psect	text1
  1142  0478                     __ptext1:	
  1143 ;; *************** function _conver *****************
  1144 ;; Defined at:
  1145 ;;		line 197 in file "main.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  AC3             1    wreg     unsigned char 
  1148 ;;  AD3             1    4[COMMON] unsigned char 
  1149 ;;  AU3             1    5[COMMON] unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  AC3             1    1[BANK0 ] unsigned char 
  1152 ;;  temporal       16    2[BANK0 ] unsigned char [16]
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      PTR const unsigned char 
  1155 ;; Registers used:
  1156 ;;		wreg
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         2       0       0       0       0
  1163 ;;      Locals:         0      17       0       0       0
  1164 ;;      Temps:          0       1       0       0       0
  1165 ;;      Totals:         2      18       0       0       0
  1166 ;;Total ram usage:       20 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; Hardware stack levels required when called: 2
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           
  1177                           ;psect for function _conver
  1178  0478                     _conver:
  1179                           
  1180                           ;incstack = 0
  1181                           ; Regs used in _conver: [wreg]
  1182                           ;conver@AC3 stored from wreg
  1183  0478  1283               	bcf	3,5	;RP0=0, select bank0
  1184  0479  1303               	bcf	3,6	;RP1=0, select bank0
  1185  047A  00A1               	movwf	conver@AC3
  1186  047B                     l2185:
  1187                           
  1188                           ;main.c: 198:     char temporal[16];;main.c: 199:     temporal[0] = AC1;
  1189  047B  0846               	movf	_AC1,w
  1190  047C  00A0               	movwf	??_conver
  1191  047D  0820               	movf	??_conver,w
  1192  047E  00A2               	movwf	conver@temporal
  1193                           
  1194                           ;main.c: 200:     temporal[1] = 0x2E;
  1195  047F  302E               	movlw	46
  1196  0480  00A0               	movwf	??_conver
  1197  0481  0820               	movf	??_conver,w
  1198  0482  00A3               	movwf	conver@temporal+1
  1199                           
  1200                           ;main.c: 201:     temporal[2] = AD1;
  1201  0483  0843               	movf	_AD1,w
  1202  0484  00A0               	movwf	??_conver
  1203  0485  0820               	movf	??_conver,w
  1204  0486  00A4               	movwf	conver@temporal+2
  1205                           
  1206                           ;main.c: 202:     temporal[3] = AU1;
  1207  0487  0840               	movf	_AU1,w
  1208  0488  00A0               	movwf	??_conver
  1209  0489  0820               	movf	??_conver,w
  1210  048A  00A5               	movwf	conver@temporal+3
  1211                           
  1212                           ;main.c: 203:     temporal[4] = 0x76;
  1213  048B  3076               	movlw	118
  1214  048C  00A0               	movwf	??_conver
  1215  048D  0820               	movf	??_conver,w
  1216  048E  00A6               	movwf	conver@temporal+4
  1217                           
  1218                           ;main.c: 204:     temporal[5] = 0x20;
  1219  048F  3020               	movlw	32
  1220  0490  00A0               	movwf	??_conver
  1221  0491  0820               	movf	??_conver,w
  1222  0492  00A7               	movwf	conver@temporal+5
  1223                           
  1224                           ;main.c: 205:     temporal[6] = AC2;
  1225  0493  0845               	movf	_AC2,w
  1226  0494  00A0               	movwf	??_conver
  1227  0495  0820               	movf	??_conver,w
  1228  0496  00A8               	movwf	conver@temporal+6
  1229                           
  1230                           ;main.c: 206:     temporal[7] = 0x2E;
  1231  0497  302E               	movlw	46
  1232  0498  00A0               	movwf	??_conver
  1233  0499  0820               	movf	??_conver,w
  1234  049A  00A9               	movwf	conver@temporal+7
  1235                           
  1236                           ;main.c: 207:     temporal[8] = AD2;
  1237  049B  0842               	movf	_AD2,w
  1238  049C  00A0               	movwf	??_conver
  1239  049D  0820               	movf	??_conver,w
  1240  049E  00AA               	movwf	conver@temporal+8
  1241                           
  1242                           ;main.c: 208:     temporal[9] = AU2;
  1243  049F  083F               	movf	_AU2,w
  1244  04A0  00A0               	movwf	??_conver
  1245  04A1  0820               	movf	??_conver,w
  1246  04A2  00AB               	movwf	conver@temporal+9
  1247                           
  1248                           ;main.c: 209:     temporal[10] = 0x76;
  1249  04A3  3076               	movlw	118
  1250  04A4  00A0               	movwf	??_conver
  1251  04A5  0820               	movf	??_conver,w
  1252  04A6  00AC               	movwf	conver@temporal+10
  1253                           
  1254                           ;main.c: 210:     temporal[11] = 0x20;
  1255  04A7  3020               	movlw	32
  1256  04A8  00A0               	movwf	??_conver
  1257  04A9  0820               	movf	??_conver,w
  1258  04AA  00AD               	movwf	conver@temporal+11
  1259                           
  1260                           ;main.c: 211:     temporal[12] = AC3;
  1261  04AB  0821               	movf	conver@AC3,w
  1262  04AC  00A0               	movwf	??_conver
  1263  04AD  0820               	movf	??_conver,w
  1264  04AE  00AE               	movwf	conver@temporal+12
  1265                           
  1266                           ;main.c: 212:     temporal[13] = 0x2E;
  1267  04AF  302E               	movlw	46
  1268  04B0  00A0               	movwf	??_conver
  1269  04B1  0820               	movf	??_conver,w
  1270  04B2  00AF               	movwf	conver@temporal+13
  1271                           
  1272                           ;main.c: 213:     temporal[14] = AD3;
  1273  04B3  0874               	movf	conver@AD3,w
  1274  04B4  00A0               	movwf	??_conver
  1275  04B5  0820               	movf	??_conver,w
  1276  04B6  00B0               	movwf	conver@temporal+14
  1277                           
  1278                           ;main.c: 214:     temporal[15] = AU3;
  1279  04B7  0875               	movf	conver@AU3,w
  1280  04B8  00A0               	movwf	??_conver
  1281  04B9  0820               	movf	??_conver,w
  1282  04BA  00B1               	movwf	conver@temporal+15
  1283                           
  1284                           ;main.c: 215:     return temporal;
  1285  04BB  3022               	movlw	(low (conver@temporal| 0))& (0+255)
  1286  04BC                     l171:
  1287  04BC  0008               	return
  1288  04BD                     __end_of_conver:
  1289                           
  1290                           	psect	text2
  1291  06A0                     __ptext2:	
  1292 ;; *************** function _USARTcon *****************
  1293 ;; Defined at:
  1294 ;;		line 3 in file "USART.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1308 ;;      Params:         0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0
  1311 ;;      Totals:         0       0       0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; Hardware stack levels required when called: 2
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function _USARTcon
  1324  06A0                     _USARTcon:
  1325  06A0                     l1723:	
  1326                           ;incstack = 0
  1327                           ; Regs used in _USARTcon: [wreg+status,2]
  1328                           
  1329                           
  1330                           ;USART.c: 5:  TXSTAbits.SYNC = 0;
  1331  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  1332  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  1333  06A2  1218               	bcf	24,4	;volatile
  1334                           
  1335                           ;USART.c: 6:  TXSTAbits.BRGH = 1;
  1336  06A3  1518               	bsf	24,2	;volatile
  1337                           
  1338                           ;USART.c: 7:  TXSTAbits.TX9 = 0;
  1339  06A4  1318               	bcf	24,6	;volatile
  1340                           
  1341                           ;USART.c: 8:  BAUDCTLbits.BRG16 = 0;
  1342  06A5  1683               	bsf	3,5	;RP0=1, select bank3
  1343  06A6  1703               	bsf	3,6	;RP1=1, select bank3
  1344  06A7  1187               	bcf	7,3	;volatile
  1345  06A8                     l1725:
  1346                           
  1347                           ;USART.c: 9:  SPBRGH = 0;
  1348  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  1349  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  1350  06AA  019A               	clrf	26	;volatile
  1351  06AB                     l1727:
  1352                           
  1353                           ;USART.c: 10:  SPBRG = 25;
  1354  06AB  3019               	movlw	25
  1355  06AC  0099               	movwf	25	;volatile
  1356  06AD                     l1729:
  1357                           
  1358                           ;USART.c: 12:  RCSTAbits.SPEN = 1;
  1359  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1360  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1361  06AF  1798               	bsf	24,7	;volatile
  1362  06B0                     l1731:
  1363                           
  1364                           ;USART.c: 13:  RCSTAbits.RX9 = 0;
  1365  06B0  1318               	bcf	24,6	;volatile
  1366  06B1                     l1733:
  1367                           
  1368                           ;USART.c: 14:  RCSTAbits.CREN = 1;
  1369  06B1  1618               	bsf	24,4	;volatile
  1370  06B2                     l1735:
  1371                           
  1372                           ;USART.c: 15:  TXSTAbits.TXEN = 1;
  1373  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  1374  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  1375  06B4  1698               	bsf	24,5	;volatile
  1376  06B5                     l291:
  1377  06B5  0008               	return
  1378  06B6                     __end_of_USARTcon:
  1379                           
  1380                           	psect	text3
  1381  0542                     __ptext3:	
  1382 ;; *************** function _Setup *****************
  1383 ;; Defined at:
  1384 ;;		line 120 in file "main.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0
  1400 ;;      Temps:          0       1       0       0       0
  1401 ;;      Totals:         0       1       0       0       0
  1402 ;;Total ram usage:        1 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; Hardware stack levels required when called: 3
  1405 ;; This function calls:
  1406 ;;		_ADC_init
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           
  1413                           ;psect for function _Setup
  1414  0542                     _Setup:
  1415  0542                     l2107:	
  1416                           ;incstack = 0
  1417                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1418                           
  1419                           
  1420                           ;main.c: 122:     ANSEL = 0;
  1421  0542  1683               	bsf	3,5	;RP0=1, select bank3
  1422  0543  1703               	bsf	3,6	;RP1=1, select bank3
  1423  0544  0188               	clrf	8	;volatile
  1424                           
  1425                           ;main.c: 123:     ANSELH = 0;
  1426  0545  0189               	clrf	9	;volatile
  1427  0546                     l2109:
  1428                           
  1429                           ;main.c: 124:     ANSEL = 0b00000011;
  1430  0546  3003               	movlw	3
  1431  0547  0088               	movwf	8	;volatile
  1432  0548                     l2111:
  1433                           
  1434                           ;main.c: 125:     TRISA = 0b00000011;
  1435  0548  3003               	movlw	3
  1436  0549  1683               	bsf	3,5	;RP0=1, select bank1
  1437  054A  1303               	bcf	3,6	;RP1=0, select bank1
  1438  054B  0085               	movwf	5	;volatile
  1439                           
  1440                           ;main.c: 126:     TRISB = 0;
  1441  054C  0186               	clrf	6	;volatile
  1442  054D                     l2113:
  1443                           
  1444                           ;main.c: 127:     TRISC = 0b10000000;
  1445  054D  3080               	movlw	128
  1446  054E  0087               	movwf	7	;volatile
  1447  054F                     l2115:
  1448                           
  1449                           ;main.c: 128:     TRISD = 0;
  1450  054F  0188               	clrf	8	;volatile
  1451  0550                     l2117:
  1452                           
  1453                           ;main.c: 129:     TRISE = 0;
  1454  0550  0189               	clrf	9	;volatile
  1455  0551                     l2119:
  1456                           
  1457                           ;main.c: 130:     PORTA = 0;
  1458  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0553  0185               	clrf	5	;volatile
  1461  0554                     l2121:
  1462                           
  1463                           ;main.c: 131:     PORTB = 0;
  1464  0554  0186               	clrf	6	;volatile
  1465  0555                     l2123:
  1466                           
  1467                           ;main.c: 132:     PORTC = 0;
  1468  0555  0187               	clrf	7	;volatile
  1469  0556                     l2125:
  1470                           
  1471                           ;main.c: 133:     PORTD = 0;
  1472  0556  0188               	clrf	8	;volatile
  1473  0557                     l2127:
  1474                           
  1475                           ;main.c: 134:     PORTE = 0;
  1476  0557  0189               	clrf	9	;volatile
  1477  0558                     l2129:
  1478                           
  1479                           ;main.c: 135:     INTCONbits.TMR0IF = 0;
  1480  0558  110B               	bcf	11,2	;volatile
  1481  0559                     l2131:
  1482                           
  1483                           ;main.c: 136:     INTCONbits.RBIF = 0;
  1484  0559  100B               	bcf	11,0	;volatile
  1485  055A                     l2133:
  1486                           
  1487                           ;main.c: 137:     INTCONbits.GIE = 1;
  1488  055A  178B               	bsf	11,7	;volatile
  1489  055B                     l2135:
  1490                           
  1491                           ;main.c: 138:     INTCONbits.PEIE = 1;
  1492  055B  170B               	bsf	11,6	;volatile
  1493  055C                     l2137:
  1494                           
  1495                           ;main.c: 139:     INTCONbits.T0IE = 1;
  1496  055C  168B               	bsf	11,5	;volatile
  1497  055D                     l2139:
  1498                           
  1499                           ;main.c: 140:     INTCONbits.RBIE = 0;
  1500  055D  118B               	bcf	11,3	;volatile
  1501  055E                     l2141:
  1502                           
  1503                           ;main.c: 141:     PIR1bits.ADIF = 0;
  1504  055E  130C               	bcf	12,6	;volatile
  1505  055F                     l2143:
  1506                           
  1507                           ;main.c: 142:     OSCCONbits.IRCF0 = 0;
  1508  055F  1683               	bsf	3,5	;RP0=1, select bank1
  1509  0560  1303               	bcf	3,6	;RP1=0, select bank1
  1510  0561  120F               	bcf	15,4	;volatile
  1511  0562                     l2145:
  1512                           
  1513                           ;main.c: 143:     OSCCONbits.IRCF1 = 1;
  1514  0562  168F               	bsf	15,5	;volatile
  1515  0563                     l2147:
  1516                           
  1517                           ;main.c: 144:     OSCCONbits.IRCF2 = 1;
  1518  0563  170F               	bsf	15,6	;volatile
  1519  0564                     l2149:
  1520                           
  1521                           ;main.c: 145:     ADC_init(20, 20);
  1522  0564  3014               	movlw	20
  1523  0565  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0566  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0567  00A2               	movwf	??_Setup
  1526  0568  0822               	movf	??_Setup,w
  1527  0569  00F4               	movwf	ADC_init@chan
  1528  056A  3014               	movlw	20
  1529  056B  120A  118A  21A7  120A  118A  	fcall	_ADC_init
  1530  0570                     l2151:
  1531                           
  1532                           ;main.c: 146:     ADCON1 = 0;
  1533  0570  1683               	bsf	3,5	;RP0=1, select bank1
  1534  0571  1303               	bcf	3,6	;RP1=0, select bank1
  1535  0572  019F               	clrf	31	;volatile
  1536  0573                     l2153:
  1537                           
  1538                           ;main.c: 147:     TMR0 = 236;
  1539  0573  30EC               	movlw	236
  1540  0574  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0575  1303               	bcf	3,6	;RP1=0, select bank0
  1542  0576  0081               	movwf	1	;volatile
  1543  0577                     l2155:
  1544                           
  1545                           ;main.c: 148:     OPTION_REG = 0b01010111;
  1546  0577  3057               	movlw	87
  1547  0578  1683               	bsf	3,5	;RP0=1, select bank1
  1548  0579  1303               	bcf	3,6	;RP1=0, select bank1
  1549  057A  0081               	movwf	1	;volatile
  1550  057B                     l2157:
  1551                           
  1552                           ;main.c: 149:     PIE1bits.ADIE = 1;
  1553  057B  170C               	bsf	12,6	;volatile
  1554  057C                     l2159:
  1555                           
  1556                           ;main.c: 150:     PIE1bits.RCIE = 1;
  1557  057C  168C               	bsf	12,5	;volatile
  1558  057D                     l2161:
  1559                           
  1560                           ;main.c: 151:     PIE1bits.TXIE = 1;
  1561  057D  160C               	bsf	12,4	;volatile
  1562  057E                     l153:
  1563  057E  0008               	return
  1564  057F                     __end_of_Setup:
  1565                           
  1566                           	psect	text4
  1567  0432                     __ptext4:	
  1568 ;; *************** function _Lcd_Write_String *****************
  1569 ;; Defined at:
  1570 ;;		line 54 in file "LCD_libreria.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  a               2   18[BANK0 ] PTR unsigned char 
  1573 ;;		 -> conver@temporal(16), STR_1(15), 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  i               2   23[BANK0 ] int 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1585 ;;      Params:         0       2       0       0       0
  1586 ;;      Locals:         0       2       0       0       0
  1587 ;;      Temps:          0       3       0       0       0
  1588 ;;      Totals:         0       7       0       0       0
  1589 ;;Total ram usage:        7 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; Hardware stack levels required when called: 4
  1592 ;; This function calls:
  1593 ;;		_Lcd_Write_Char
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           
  1600                           ;psect for function _Lcd_Write_String
  1601  0432                     _Lcd_Write_String:
  1602  0432                     l2177:	
  1603                           ;incstack = 0
  1604                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1605                           
  1606                           
  1607                           ;LCD_libreria.c: 55:     int i;;LCD_libreria.c: 56:     for (i = 0; a[i] != '\0'; i++)
  1608  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0434  01B7               	clrf	Lcd_Write_String@i
  1611  0435  01B8               	clrf	Lcd_Write_String@i+1
  1612  0436  2C5B               	goto	l2183
  1613  0437                     l2179:
  1614                           
  1615                           ;LCD_libreria.c: 57:         Lcd_Write_Char(a[i]);
  1616  0437  0837               	movf	Lcd_Write_String@i,w
  1617  0438  0732               	addwf	Lcd_Write_String@a,w
  1618  0439  00B5               	movwf	??_Lcd_Write_String+1
  1619  043A  0833               	movf	Lcd_Write_String@a+1,w
  1620  043B  00B4               	movwf	??_Lcd_Write_String
  1621  043C  1803               	skipnc
  1622  043D  0AB4               	incf	??_Lcd_Write_String,f
  1623  043E  1FB7               	btfss	Lcd_Write_String@i,7
  1624  043F  2C41               	goto	u1070
  1625  0440  03B4               	decf	??_Lcd_Write_String,f
  1626  0441                     u1070:
  1627  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0443  0834               	movf	??_Lcd_Write_String,w
  1630  0444  00B6               	movwf	??_Lcd_Write_String+2
  1631  0445  0836               	movf	??_Lcd_Write_String+2,w
  1632  0446  00FF               	movwf	btemp+1
  1633  0447  0835               	movf	??_Lcd_Write_String+1,w
  1634  0448  0084               	movwf	4
  1635  0449  120A  118A  2636  120A  118A  	fcall	stringtab
  1636  044E  120A  118A  26B6  120A  118A  	fcall	_Lcd_Write_Char
  1637  0453                     l2181:
  1638  0453  3001               	movlw	1
  1639  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0455  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0456  07B7               	addwf	Lcd_Write_String@i,f
  1642  0457  1803               	skipnc
  1643  0458  0AB8               	incf	Lcd_Write_String@i+1,f
  1644  0459  3000               	movlw	0
  1645  045A  07B8               	addwf	Lcd_Write_String@i+1,f
  1646  045B                     l2183:
  1647  045B  0837               	movf	Lcd_Write_String@i,w
  1648  045C  0732               	addwf	Lcd_Write_String@a,w
  1649  045D  00B5               	movwf	??_Lcd_Write_String+1
  1650  045E  0833               	movf	Lcd_Write_String@a+1,w
  1651  045F  00B4               	movwf	??_Lcd_Write_String
  1652  0460  1803               	skipnc
  1653  0461  0AB4               	incf	??_Lcd_Write_String,f
  1654  0462  1FB7               	btfss	Lcd_Write_String@i,7
  1655  0463  2C65               	goto	u1080
  1656  0464  03B4               	decf	??_Lcd_Write_String,f
  1657  0465                     u1080:
  1658  0465  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0466  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0467  0834               	movf	??_Lcd_Write_String,w
  1661  0468  00B6               	movwf	??_Lcd_Write_String+2
  1662  0469  0836               	movf	??_Lcd_Write_String+2,w
  1663  046A  00FF               	movwf	btemp+1
  1664  046B  0835               	movf	??_Lcd_Write_String+1,w
  1665  046C  0084               	movwf	4
  1666  046D  120A  118A  2636  120A  118A  	fcall	stringtab
  1667  0472  3A00               	xorlw	0
  1668  0473  1D03               	skipz
  1669  0474  2C76               	goto	u1091
  1670  0475  2C77               	goto	u1090
  1671  0476                     u1091:
  1672  0476  2C37               	goto	l2179
  1673  0477                     u1090:
  1674  0477                     l272:
  1675  0477  0008               	return
  1676  0478                     __end_of_Lcd_Write_String:
  1677                           
  1678                           	psect	text5
  1679  06B6                     __ptext5:	
  1680 ;; *************** function _Lcd_Write_Char *****************
  1681 ;; Defined at:
  1682 ;;		line 45 in file "LCD_libreria.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  a               1    wreg     unsigned char 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  a               1    0[BANK0 ] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, pclath, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1696 ;;      Params:         0       0       0       0       0
  1697 ;;      Locals:         0       1       0       0       0
  1698 ;;      Temps:          1       0       0       0       0
  1699 ;;      Totals:         1       1       0       0       0
  1700 ;;Total ram usage:        2 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 3
  1703 ;; This function calls:
  1704 ;;		_Lcd_Port
  1705 ;; This function is called by:
  1706 ;;		_Lcd_Write_String
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           
  1711                           ;psect for function _Lcd_Write_Char
  1712  06B6                     _Lcd_Write_Char:
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1716                           ;Lcd_Write_Char@a stored from wreg
  1717  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1718  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1719  06B8  00A0               	movwf	Lcd_Write_Char@a
  1720  06B9                     l2067:
  1721                           
  1722                           ;LCD_libreria.c: 46:     Lcd_Port(a);
  1723  06B9  0820               	movf	Lcd_Write_Char@a,w
  1724  06BA  120A  118A  26D4  120A  118A  	fcall	_Lcd_Port
  1725  06BF                     l2069:
  1726                           
  1727                           ;LCD_libreria.c: 47:     PORTEbits.RE1 = 1;
  1728  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1729  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1730  06C1  1489               	bsf	9,1	;volatile
  1731  06C2                     l2071:
  1732                           
  1733                           ;LCD_libreria.c: 48:     PORTEbits.RE2 = 0;
  1734  06C2  1109               	bcf	9,2	;volatile
  1735  06C3                     l2073:
  1736                           
  1737                           ;LCD_libreria.c: 49:     PORTEbits.RE0 = 1;
  1738  06C3  1409               	bsf	9,0	;volatile
  1739  06C4                     l2075:
  1740                           
  1741                           ;LCD_libreria.c: 50:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1742  06C4  300D               	movlw	13
  1743  06C5  00F5               	movwf	??_Lcd_Write_Char
  1744  06C6                     u1157:
  1745  06C6  0BF5               	decfsz	??_Lcd_Write_Char,f
  1746  06C7  2EC6               	goto	u1157
  1747  06C8                     l2077:
  1748                           
  1749                           ;LCD_libreria.c: 51:     PORTEbits.RE0 = 0;
  1750  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1751  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1752  06CA  1009               	bcf	9,0	;volatile
  1753  06CB                     l266:
  1754  06CB  0008               	return
  1755  06CC                     __end_of_Lcd_Write_Char:
  1756                           
  1757                           	psect	text6
  1758  0610                     __ptext6:	
  1759 ;; *************** function _Lcd_Set_Cursor *****************
  1760 ;; Defined at:
  1761 ;;		line 20 in file "LCD_libreria.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  a               1    wreg     unsigned char 
  1764 ;;  b               1    2[BANK0 ] unsigned char 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  a               1    4[BANK0 ] unsigned char 
  1767 ;;  temp            1    5[BANK0 ] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0, pclath, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1777 ;;      Params:         0       1       0       0       0
  1778 ;;      Locals:         0       2       0       0       0
  1779 ;;      Temps:          0       1       0       0       0
  1780 ;;      Totals:         0       4       0       0       0
  1781 ;;Total ram usage:        4 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 4
  1784 ;; This function calls:
  1785 ;;		_Lcd_Cmd
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           
  1792                           ;psect for function _Lcd_Set_Cursor
  1793  0610                     _Lcd_Set_Cursor:
  1794                           
  1795                           ;incstack = 0
  1796                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1797                           ;Lcd_Set_Cursor@a stored from wreg
  1798  0610  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0611  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0612  00A4               	movwf	Lcd_Set_Cursor@a
  1801  0613                     l2165:
  1802                           
  1803                           ;LCD_libreria.c: 21:     char temp;;LCD_libreria.c: 22:     if (a == 1) {
  1804  0613  0324               	decf	Lcd_Set_Cursor@a,w
  1805  0614  1D03               	btfss	3,2
  1806  0615  2E17               	goto	u1051
  1807  0616  2E18               	goto	u1050
  1808  0617                     u1051:
  1809  0617  2E24               	goto	l2171
  1810  0618                     u1050:
  1811  0618                     l2167:
  1812                           
  1813                           ;LCD_libreria.c: 23:         temp = 0x80 + b - 1;
  1814  0618  0822               	movf	Lcd_Set_Cursor@b,w
  1815  0619  3E7F               	addlw	127
  1816  061A  00A3               	movwf	??_Lcd_Set_Cursor
  1817  061B  0823               	movf	??_Lcd_Set_Cursor,w
  1818  061C  00A5               	movwf	Lcd_Set_Cursor@temp
  1819  061D                     l2169:
  1820                           
  1821                           ;LCD_libreria.c: 24:         Lcd_Cmd(temp);
  1822  061D  0825               	movf	Lcd_Set_Cursor@temp,w
  1823  061E  120A  118A  2655  120A  118A  	fcall	_Lcd_Cmd
  1824                           
  1825                           ;LCD_libreria.c: 25:     } else if (a == 2) {
  1826  0623  2E35               	goto	l260
  1827  0624                     l2171:
  1828  0624  3002               	movlw	2
  1829  0625  0624               	xorwf	Lcd_Set_Cursor@a,w
  1830  0626  1D03               	btfss	3,2
  1831  0627  2E29               	goto	u1061
  1832  0628  2E2A               	goto	u1060
  1833  0629                     u1061:
  1834  0629  2E35               	goto	l260
  1835  062A                     u1060:
  1836  062A                     l2173:
  1837                           
  1838                           ;LCD_libreria.c: 26:         temp = 0xC0 + b - 1;
  1839  062A  0822               	movf	Lcd_Set_Cursor@b,w
  1840  062B  3EBF               	addlw	191
  1841  062C  00A3               	movwf	??_Lcd_Set_Cursor
  1842  062D  0823               	movf	??_Lcd_Set_Cursor,w
  1843  062E  00A5               	movwf	Lcd_Set_Cursor@temp
  1844  062F                     l2175:
  1845                           
  1846                           ;LCD_libreria.c: 27:         Lcd_Cmd(temp);
  1847  062F  0825               	movf	Lcd_Set_Cursor@temp,w
  1848  0630  120A  118A  2655  120A  118A  	fcall	_Lcd_Cmd
  1849  0635                     l260:
  1850  0635  0008               	return
  1851  0636                     __end_of_Lcd_Set_Cursor:
  1852                           
  1853                           	psect	text7
  1854  0670                     __ptext7:	
  1855 ;; *************** function _Lcd_Init *****************
  1856 ;; Defined at:
  1857 ;;		line 31 in file "LCD_libreria.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, status,2, status,0, pclath, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1871 ;;      Params:         0       0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0
  1874 ;;      Totals:         0       0       0       0       0
  1875 ;;Total ram usage:        0 bytes
  1876 ;; Hardware stack levels used: 1
  1877 ;; Hardware stack levels required when called: 4
  1878 ;; This function calls:
  1879 ;;		_Lcd_Cmd
  1880 ;; This function is called by:
  1881 ;;		_main
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           
  1886                           ;psect for function _Lcd_Init
  1887  0670                     _Lcd_Init:
  1888  0670                     l2163:	
  1889                           ;incstack = 0
  1890                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1891                           
  1892                           
  1893                           ;LCD_libreria.c: 39:     Lcd_Cmd(0x38);
  1894  0670  3038               	movlw	56
  1895  0671  120A  118A  2655  120A  118A  	fcall	_Lcd_Cmd
  1896                           
  1897                           ;LCD_libreria.c: 40:     Lcd_Cmd(0x06);
  1898  0676  3006               	movlw	6
  1899  0677  120A  118A  2655  120A  118A  	fcall	_Lcd_Cmd
  1900                           
  1901                           ;LCD_libreria.c: 41:     Lcd_Cmd(0x0c);
  1902  067C  300C               	movlw	12
  1903  067D  120A  118A  2655  120A  118A  	fcall	_Lcd_Cmd
  1904                           
  1905                           ;LCD_libreria.c: 42:     Lcd_Cmd(0x80);
  1906  0682  3080               	movlw	128
  1907  0683  120A  118A  2655  120A  118A  	fcall	_Lcd_Cmd
  1908  0688                     l263:
  1909  0688  0008               	return
  1910  0689                     __end_of_Lcd_Init:
  1911                           
  1912                           	psect	text8
  1913  0655                     __ptext8:	
  1914 ;; *************** function _Lcd_Cmd *****************
  1915 ;; Defined at:
  1916 ;;		line 7 in file "LCD_libreria.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  a               1    wreg     unsigned char 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  a               1    5[COMMON] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1930 ;;      Params:         0       0       0       0       0
  1931 ;;      Locals:         1       0       0       0       0
  1932 ;;      Temps:          0       2       0       0       0
  1933 ;;      Totals:         1       2       0       0       0
  1934 ;;Total ram usage:        3 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 3
  1937 ;; This function calls:
  1938 ;;		_Lcd_Port
  1939 ;; This function is called by:
  1940 ;;		_Lcd_Set_Cursor
  1941 ;;		_Lcd_Init
  1942 ;;		_Lcd_Clear
  1943 ;;		_Lcd_Shift_Right
  1944 ;;		_Lcd_Shift_Left
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _Lcd_Cmd
  1950  0655                     _Lcd_Cmd:
  1951                           
  1952                           ;incstack = 0
  1953                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1954                           ;Lcd_Cmd@a stored from wreg
  1955  0655  00F5               	movwf	Lcd_Cmd@a
  1956  0656                     l2055:
  1957                           
  1958                           ;LCD_libreria.c: 8:     Lcd_Port(a);
  1959  0656  0875               	movf	Lcd_Cmd@a,w
  1960  0657  120A  118A  26D4  120A  118A  	fcall	_Lcd_Port
  1961  065C                     l2057:
  1962                           
  1963                           ;LCD_libreria.c: 9:     PORTEbits.RE1 = 0;
  1964  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1965  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1966  065E  1089               	bcf	9,1	;volatile
  1967  065F                     l2059:
  1968                           
  1969                           ;LCD_libreria.c: 10:     PORTEbits.RE2 = 0;
  1970  065F  1109               	bcf	9,2	;volatile
  1971  0660                     l2061:
  1972                           
  1973                           ;LCD_libreria.c: 11:     PORTEbits.RE0 = 1;
  1974  0660  1409               	bsf	9,0	;volatile
  1975  0661                     l2063:
  1976                           
  1977                           ;LCD_libreria.c: 12:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1978  0661  3007               	movlw	7
  1979  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0664  00A1               	movwf	??_Lcd_Cmd+1
  1982  0665  307C               	movlw	124
  1983  0666  00A0               	movwf	??_Lcd_Cmd
  1984  0667                     u1167:
  1985  0667  0BA0               	decfsz	??_Lcd_Cmd,f
  1986  0668  2E67               	goto	u1167
  1987  0669  0BA1               	decfsz	??_Lcd_Cmd+1,f
  1988  066A  2E67               	goto	u1167
  1989  066B  0000               	nop
  1990  066C                     l2065:
  1991                           
  1992                           ;LCD_libreria.c: 13:     PORTEbits.RE0 = 0;
  1993  066C  1283               	bcf	3,5	;RP0=0, select bank0
  1994  066D  1303               	bcf	3,6	;RP1=0, select bank0
  1995  066E  1009               	bcf	9,0	;volatile
  1996  066F                     l251:
  1997  066F  0008               	return
  1998  0670                     __end_of_Lcd_Cmd:
  1999                           
  2000                           	psect	text9
  2001  06D4                     __ptext9:	
  2002 ;; *************** function _Lcd_Port *****************
  2003 ;; Defined at:
  2004 ;;		line 3 in file "LCD_libreria.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  a               1    wreg     unsigned char 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  a               1    4[COMMON] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         0       0       0       0       0
  2019 ;;      Locals:         1       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0
  2021 ;;      Totals:         1       0       0       0       0
  2022 ;;Total ram usage:        1 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; Hardware stack levels required when called: 2
  2025 ;; This function calls:
  2026 ;;		Nothing
  2027 ;; This function is called by:
  2028 ;;		_Lcd_Cmd
  2029 ;;		_Lcd_Write_Char
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           
  2034                           ;psect for function _Lcd_Port
  2035  06D4                     _Lcd_Port:
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in _Lcd_Port: [wreg]
  2039                           ;Lcd_Port@a stored from wreg
  2040  06D4  00F4               	movwf	Lcd_Port@a
  2041  06D5                     l1955:
  2042                           
  2043                           ;LCD_libreria.c: 4:     PORTD = a;
  2044  06D5  0874               	movf	Lcd_Port@a,w
  2045  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2046  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2047  06D8  0088               	movwf	8	;volatile
  2048  06D9                     l248:
  2049  06D9  0008               	return
  2050  06DA                     __end_of_Lcd_Port:
  2051                           
  2052                           	psect	text10
  2053  02CE                     __ptext10:	
  2054 ;; *************** function _LECT3 *****************
  2055 ;; Defined at:
  2056 ;;		line 189 in file "main.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;		None
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2070 ;;      Params:         0       0       0       0       0
  2071 ;;      Locals:         0       0       0       0       0
  2072 ;;      Temps:          0       4       0       0       0
  2073 ;;      Totals:         0       4       0       0       0
  2074 ;;Total ram usage:        4 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; Hardware stack levels required when called: 3
  2077 ;; This function calls:
  2078 ;;		___awdiv
  2079 ;;		___bmul
  2080 ;;		___wmul
  2081 ;;		_num_ascii
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _LECT3
  2089  02CE                     _LECT3:
  2090  02CE                     l2229:	
  2091                           ;incstack = 0
  2092                           ; Regs used in _LECT3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2093                           
  2094                           
  2095                           ;main.c: 190:     Cen3 = CONT/100;
  2096  02CE  3064               	movlw	100
  2097  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2098  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2099  02D1  00A4               	movwf	___awdiv@divisor
  2100  02D2  3000               	movlw	0
  2101  02D3  00A5               	movwf	___awdiv@divisor+1
  2102  02D4  083B               	movf	_CONT,w
  2103  02D5  00AD               	movwf	??_LECT3
  2104  02D6  01AE               	clrf	??_LECT3+1
  2105  02D7  082D               	movf	??_LECT3,w
  2106  02D8  00A6               	movwf	___awdiv@dividend
  2107  02D9  082E               	movf	??_LECT3+1,w
  2108  02DA  00A7               	movwf	___awdiv@dividend+1
  2109  02DB  120A  118A  23C9  120A  118A  	fcall	___awdiv
  2110  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2111  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  2112  02E2  0824               	movf	?___awdiv,w
  2113  02E3  00AF               	movwf	??_LECT3+2
  2114  02E4  082F               	movf	??_LECT3+2,w
  2115  02E5  00CD               	movwf	_Cen3
  2116                           
  2117                           ;main.c: 191:     Dec3 = (CONT-Cen3*100)/10;
  2118  02E6  300A               	movlw	10
  2119  02E7  00A4               	movwf	___awdiv@divisor
  2120  02E8  3000               	movlw	0
  2121  02E9  00A5               	movwf	___awdiv@divisor+1
  2122  02EA  084D               	movf	_Cen3,w
  2123  02EB  00AD               	movwf	??_LECT3
  2124  02EC  01AE               	clrf	??_LECT3+1
  2125  02ED  082D               	movf	??_LECT3,w
  2126  02EE  00A0               	movwf	___wmul@multiplier
  2127  02EF  082E               	movf	??_LECT3+1,w
  2128  02F0  00A1               	movwf	___wmul@multiplier+1
  2129  02F1  309C               	movlw	156
  2130  02F2  00A2               	movwf	___wmul@multiplicand
  2131  02F3  30FF               	movlw	255
  2132  02F4  00A3               	movwf	___wmul@multiplicand+1
  2133  02F5  120A  118A  25E9  120A  118A  	fcall	___wmul
  2134  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2135  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2136  02FC  083B               	movf	_CONT,w
  2137  02FD  0720               	addwf	?___wmul,w
  2138  02FE  00A6               	movwf	___awdiv@dividend
  2139  02FF  0821               	movf	?___wmul+1,w
  2140  0300  1803               	skipnc
  2141  0301  0A21               	incf	?___wmul+1,w
  2142  0302  00A7               	movwf	___awdiv@dividend+1
  2143  0303  120A  118A  23C9  120A  118A  	fcall	___awdiv
  2144  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2146  030A  0824               	movf	?___awdiv,w
  2147  030B  00AF               	movwf	??_LECT3+2
  2148  030C  082F               	movf	??_LECT3+2,w
  2149  030D  00CA               	movwf	_Dec3
  2150                           
  2151                           ;main.c: 192:     Un3 = (CONT-Cen3*100-Dec3*10);
  2152  030E  309C               	movlw	156
  2153  030F  00AD               	movwf	??_LECT3
  2154  0310  082D               	movf	??_LECT3,w
  2155  0311  00F4               	movwf	___bmul@multiplicand
  2156  0312  084D               	movf	_Cen3,w
  2157  0313  120A  118A  2689  120A  118A  	fcall	___bmul
  2158  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2160  031A  00AE               	movwf	??_LECT3+1
  2161  031B  30F6               	movlw	246
  2162  031C  00AF               	movwf	??_LECT3+2
  2163  031D  082F               	movf	??_LECT3+2,w
  2164  031E  00F4               	movwf	___bmul@multiplicand
  2165  031F  084A               	movf	_Dec3,w
  2166  0320  120A  118A  2689  120A  118A  	fcall	___bmul
  2167  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0327  072E               	addwf	??_LECT3+1,w
  2170  0328  073B               	addwf	_CONT,w
  2171  0329  00B0               	movwf	??_LECT3+3
  2172  032A  0830               	movf	??_LECT3+3,w
  2173  032B  00C7               	movwf	_Un3
  2174  032C                     l2231:
  2175                           
  2176                           ;main.c: 193:     AC3 = num_ascii(Cen3);
  2177  032C  084D               	movf	_Cen3,w
  2178  032D  120A  118A  2501  120A  118A  	fcall	_num_ascii
  2179  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2181  0334  00AD               	movwf	??_LECT3
  2182  0335  082D               	movf	??_LECT3,w
  2183  0336  00C4               	movwf	_AC3
  2184  0337                     l2233:
  2185                           
  2186                           ;main.c: 194:     AD3 = num_ascii(Dec3);
  2187  0337  084A               	movf	_Dec3,w
  2188  0338  120A  118A  2501  120A  118A  	fcall	_num_ascii
  2189  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2190  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2191  033F  00AD               	movwf	??_LECT3
  2192  0340  082D               	movf	??_LECT3,w
  2193  0341  00C1               	movwf	_AD3
  2194  0342                     l2235:
  2195                           
  2196                           ;main.c: 195:     AU3 = num_ascii(Un3);
  2197  0342  0847               	movf	_Un3,w
  2198  0343  120A  118A  2501  120A  118A  	fcall	_num_ascii
  2199  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2201  034A  00AD               	movwf	??_LECT3
  2202  034B  082D               	movf	??_LECT3,w
  2203  034C  00BE               	movwf	_AU3
  2204  034D                     l168:
  2205  034D  0008               	return
  2206  034E                     __end_of_LECT3:
  2207                           
  2208                           	psect	text11
  2209  0026                     __ptext11:	
  2210 ;; *************** function _LECT2 *****************
  2211 ;; Defined at:
  2212 ;;		line 181 in file "main.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2226 ;;      Params:         0       0       0       0       0
  2227 ;;      Locals:         0       2       0       0       0
  2228 ;;      Temps:          0       8       0       0       0
  2229 ;;      Totals:         0      10       0       0       0
  2230 ;;Total ram usage:       10 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 3
  2233 ;; This function calls:
  2234 ;;		___awdiv
  2235 ;;		___bmul
  2236 ;;		___wmul
  2237 ;;		_num_ascii
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           
  2244                           ;psect for function _LECT2
  2245  0026                     _LECT2:
  2246  0026                     l2221:	
  2247                           ;incstack = 0
  2248                           ; Regs used in _LECT2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2249                           
  2250                           
  2251                           ;main.c: 182:     Cen2 = v2/51;
  2252  0026  3033               	movlw	51
  2253  0027  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0028  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0029  00A4               	movwf	___awdiv@divisor
  2256  002A  3000               	movlw	0
  2257  002B  00A5               	movwf	___awdiv@divisor+1
  2258  002C  0851               	movf	_v2,w
  2259  002D  00AD               	movwf	??_LECT2
  2260  002E  01AE               	clrf	??_LECT2+1
  2261  002F  082D               	movf	??_LECT2,w
  2262  0030  00A6               	movwf	___awdiv@dividend
  2263  0031  082E               	movf	??_LECT2+1,w
  2264  0032  00A7               	movwf	___awdiv@dividend+1
  2265  0033  120A  118A  23C9  120A  118A  	fcall	___awdiv
  2266  0038  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0039  1303               	bcf	3,6	;RP1=0, select bank0
  2268  003A  0824               	movf	?___awdiv,w
  2269  003B  00AF               	movwf	??_LECT2+2
  2270  003C  082F               	movf	??_LECT2+2,w
  2271  003D  00CE               	movwf	_Cen2
  2272                           
  2273                           ;main.c: 183:     Dec2 = (((100*v2)/51-(Cen2*100))/10);
  2274  003E  3033               	movlw	51
  2275  003F  00A4               	movwf	___awdiv@divisor
  2276  0040  3000               	movlw	0
  2277  0041  00A5               	movwf	___awdiv@divisor+1
  2278  0042  0851               	movf	_v2,w
  2279  0043  00AD               	movwf	??_LECT2
  2280  0044  01AE               	clrf	??_LECT2+1
  2281  0045  082D               	movf	??_LECT2,w
  2282  0046  00A0               	movwf	___wmul@multiplier
  2283  0047  082E               	movf	??_LECT2+1,w
  2284  0048  00A1               	movwf	___wmul@multiplier+1
  2285  0049  3064               	movlw	100
  2286  004A  00A2               	movwf	___wmul@multiplicand
  2287  004B  3000               	movlw	0
  2288  004C  00A3               	movwf	___wmul@multiplicand+1
  2289  004D  120A  118A  25E9  120A  118A  	fcall	___wmul
  2290  0052  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0053  1303               	bcf	3,6	;RP1=0, select bank0
  2292  0054  0821               	movf	?___wmul+1,w
  2293  0055  00A7               	movwf	___awdiv@dividend+1
  2294  0056  0820               	movf	?___wmul,w
  2295  0057  00A6               	movwf	___awdiv@dividend
  2296  0058  120A  118A  23C9  120A  118A  	fcall	___awdiv
  2297  005D  1283               	bcf	3,5	;RP0=0, select bank0
  2298  005E  1303               	bcf	3,6	;RP1=0, select bank0
  2299  005F  0824               	movf	?___awdiv,w
  2300  0060  00AF               	movwf	??_LECT2+2
  2301  0061  0825               	movf	?___awdiv+1,w
  2302  0062  00B0               	movwf	??_LECT2+3
  2303  0063  084E               	movf	_Cen2,w
  2304  0064  00B1               	movwf	??_LECT2+4
  2305  0065  01B2               	clrf	??_LECT2+5
  2306  0066  0831               	movf	??_LECT2+4,w
  2307  0067  00A0               	movwf	___wmul@multiplier
  2308  0068  0832               	movf	??_LECT2+5,w
  2309  0069  00A1               	movwf	___wmul@multiplier+1
  2310  006A  309C               	movlw	156
  2311  006B  00A2               	movwf	___wmul@multiplicand
  2312  006C  30FF               	movlw	255
  2313  006D  00A3               	movwf	___wmul@multiplicand+1
  2314  006E  120A  118A  25E9  120A  118A  	fcall	___wmul
  2315  0073  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0074  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0075  0820               	movf	?___wmul,w
  2318  0076  072F               	addwf	??_LECT2+2,w
  2319  0077  00B5               	movwf	_LECT2$1143
  2320  0078  0821               	movf	?___wmul+1,w
  2321  0079  1803               	skipnc
  2322  007A  0A21               	incf	?___wmul+1,w
  2323  007B  0730               	addwf	??_LECT2+3,w
  2324  007C  00B6               	movwf	_LECT2$1143+1
  2325                           
  2326                           ;main.c: 183:     Dec2 = (((100*v2)/51-(Cen2*100))/10);
  2327  007D  300A               	movlw	10
  2328  007E  00A4               	movwf	___awdiv@divisor
  2329  007F  3000               	movlw	0
  2330  0080  00A5               	movwf	___awdiv@divisor+1
  2331  0081  0836               	movf	_LECT2$1143+1,w
  2332  0082  00A7               	movwf	___awdiv@dividend+1
  2333  0083  0835               	movf	_LECT2$1143,w
  2334  0084  00A6               	movwf	___awdiv@dividend
  2335  0085  120A  118A  23C9  120A  118A  	fcall	___awdiv
  2336  008A  1283               	bcf	3,5	;RP0=0, select bank0
  2337  008B  1303               	bcf	3,6	;RP1=0, select bank0
  2338  008C  0824               	movf	?___awdiv,w
  2339  008D  00AD               	movwf	??_LECT2
  2340  008E  082D               	movf	??_LECT2,w
  2341  008F  00CB               	movwf	_Dec2
  2342                           
  2343                           ;main.c: 184:     Un2 = (100*v2)/51-(100*Cen2+Dec2*10);
  2344  0090  3033               	movlw	51
  2345  0091  00A4               	movwf	___awdiv@divisor
  2346  0092  3000               	movlw	0
  2347  0093  00A5               	movwf	___awdiv@divisor+1
  2348  0094  0851               	movf	_v2,w
  2349  0095  00AD               	movwf	??_LECT2
  2350  0096  01AE               	clrf	??_LECT2+1
  2351  0097  082D               	movf	??_LECT2,w
  2352  0098  00A0               	movwf	___wmul@multiplier
  2353  0099  082E               	movf	??_LECT2+1,w
  2354  009A  00A1               	movwf	___wmul@multiplier+1
  2355  009B  3064               	movlw	100
  2356  009C  00A2               	movwf	___wmul@multiplicand
  2357  009D  3000               	movlw	0
  2358  009E  00A3               	movwf	___wmul@multiplicand+1
  2359  009F  120A  118A  25E9  120A  118A  	fcall	___wmul
  2360  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  2361  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  2362  00A6  0821               	movf	?___wmul+1,w
  2363  00A7  00A7               	movwf	___awdiv@dividend+1
  2364  00A8  0820               	movf	?___wmul,w
  2365  00A9  00A6               	movwf	___awdiv@dividend
  2366  00AA  120A  118A  23C9  120A  118A  	fcall	___awdiv
  2367  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  2368  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  2369  00B1  0824               	movf	?___awdiv,w
  2370  00B2  00AF               	movwf	??_LECT2+2
  2371  00B3  0825               	movf	?___awdiv+1,w
  2372  00B4  00B0               	movwf	??_LECT2+3
  2373  00B5  309C               	movlw	156
  2374  00B6  00B1               	movwf	??_LECT2+4
  2375  00B7  0831               	movf	??_LECT2+4,w
  2376  00B8  00F4               	movwf	___bmul@multiplicand
  2377  00B9  084E               	movf	_Cen2,w
  2378  00BA  120A  118A  2689  120A  118A  	fcall	___bmul
  2379  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  2380  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  2381  00C1  00B2               	movwf	??_LECT2+5
  2382  00C2  30F6               	movlw	246
  2383  00C3  00B3               	movwf	??_LECT2+6
  2384  00C4  0833               	movf	??_LECT2+6,w
  2385  00C5  00F4               	movwf	___bmul@multiplicand
  2386  00C6  084B               	movf	_Dec2,w
  2387  00C7  120A  118A  2689  120A  118A  	fcall	___bmul
  2388  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  2389  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  2390  00CE  0732               	addwf	??_LECT2+5,w
  2391  00CF  072F               	addwf	??_LECT2+2,w
  2392  00D0  00B4               	movwf	??_LECT2+7
  2393  00D1  0834               	movf	??_LECT2+7,w
  2394  00D2  00C8               	movwf	_Un2
  2395  00D3                     l2223:
  2396                           
  2397                           ;main.c: 185:     AC2 = num_ascii(Cen2);
  2398  00D3  084E               	movf	_Cen2,w
  2399  00D4  120A  118A  2501  120A  118A  	fcall	_num_ascii
  2400  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  2401  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  2402  00DB  00AD               	movwf	??_LECT2
  2403  00DC  082D               	movf	??_LECT2,w
  2404  00DD  00C5               	movwf	_AC2
  2405  00DE                     l2225:
  2406                           
  2407                           ;main.c: 186:     AD2 = num_ascii(Dec2);
  2408  00DE  084B               	movf	_Dec2,w
  2409  00DF  120A  118A  2501  120A  118A  	fcall	_num_ascii
  2410  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2411  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2412  00E6  00AD               	movwf	??_LECT2
  2413  00E7  082D               	movf	??_LECT2,w
  2414  00E8  00C2               	movwf	_AD2
  2415  00E9                     l2227:
  2416                           
  2417                           ;main.c: 187:     AU2 = num_ascii(Un2);
  2418  00E9  0848               	movf	_Un2,w
  2419  00EA  120A  118A  2501  120A  118A  	fcall	_num_ascii
  2420  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2421  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  2422  00F1  00AD               	movwf	??_LECT2
  2423  00F2  082D               	movf	??_LECT2,w
  2424  00F3  00BF               	movwf	_AU2
  2425  00F4                     l165:
  2426  00F4  0008               	return
  2427  00F5                     __end_of_LECT2:
  2428                           
  2429                           	psect	text12
  2430  00F5                     __ptext12:	
  2431 ;; *************** function _LECT1 *****************
  2432 ;; Defined at:
  2433 ;;		line 172 in file "main.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2447 ;;      Params:         0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0
  2449 ;;      Temps:          0       8       0       0       0
  2450 ;;      Totals:         0       8       0       0       0
  2451 ;;Total ram usage:        8 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; Hardware stack levels required when called: 3
  2454 ;; This function calls:
  2455 ;;		___awdiv
  2456 ;;		___bmul
  2457 ;;		___wmul
  2458 ;;		_num_ascii
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function _LECT1
  2466  00F5                     _LECT1:
  2467  00F5                     l2213:	
  2468                           ;incstack = 0
  2469                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2470                           
  2471                           
  2472                           ;main.c: 173:     Cen1 = v1/51;
  2473  00F5  3033               	movlw	51
  2474  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  2475  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  2476  00F8  00A4               	movwf	___awdiv@divisor
  2477  00F9  3000               	movlw	0
  2478  00FA  00A5               	movwf	___awdiv@divisor+1
  2479  00FB  0879               	movf	_v1,w
  2480  00FC  00AD               	movwf	??_LECT1
  2481  00FD  01AE               	clrf	??_LECT1+1
  2482  00FE  082D               	movf	??_LECT1,w
  2483  00FF  00A6               	movwf	___awdiv@dividend
  2484  0100  082E               	movf	??_LECT1+1,w
  2485  0101  00A7               	movwf	___awdiv@dividend+1
  2486  0102  120A  118A  23C9  120A  118A  	fcall	___awdiv
  2487  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2489  0109  0824               	movf	?___awdiv,w
  2490  010A  00AF               	movwf	??_LECT1+2
  2491  010B  082F               	movf	??_LECT1+2,w
  2492  010C  00F8               	movwf	_Cen1
  2493                           
  2494                           ;main.c: 174:     Dec1 = ((10*v1)/51-Cen1*10);
  2495  010D  3033               	movlw	51
  2496  010E  00A4               	movwf	___awdiv@divisor
  2497  010F  3000               	movlw	0
  2498  0110  00A5               	movwf	___awdiv@divisor+1
  2499  0111  0879               	movf	_v1,w
  2500  0112  00AD               	movwf	??_LECT1
  2501  0113  01AE               	clrf	??_LECT1+1
  2502  0114  082D               	movf	??_LECT1,w
  2503  0115  00A0               	movwf	___wmul@multiplier
  2504  0116  082E               	movf	??_LECT1+1,w
  2505  0117  00A1               	movwf	___wmul@multiplier+1
  2506  0118  300A               	movlw	10
  2507  0119  00A2               	movwf	___wmul@multiplicand
  2508  011A  3000               	movlw	0
  2509  011B  00A3               	movwf	___wmul@multiplicand+1
  2510  011C  120A  118A  25E9  120A  118A  	fcall	___wmul
  2511  0121  1283               	bcf	3,5	;RP0=0, select bank0
  2512  0122  1303               	bcf	3,6	;RP1=0, select bank0
  2513  0123  0821               	movf	?___wmul+1,w
  2514  0124  00A7               	movwf	___awdiv@dividend+1
  2515  0125  0820               	movf	?___wmul,w
  2516  0126  00A6               	movwf	___awdiv@dividend
  2517  0127  120A  118A  23C9  120A  118A  	fcall	___awdiv
  2518  012C  1283               	bcf	3,5	;RP0=0, select bank0
  2519  012D  1303               	bcf	3,6	;RP1=0, select bank0
  2520  012E  0824               	movf	?___awdiv,w
  2521  012F  00AF               	movwf	??_LECT1+2
  2522  0130  0825               	movf	?___awdiv+1,w
  2523  0131  00B0               	movwf	??_LECT1+3
  2524  0132  30F6               	movlw	246
  2525  0133  00B1               	movwf	??_LECT1+4
  2526  0134  0831               	movf	??_LECT1+4,w
  2527  0135  00F4               	movwf	___bmul@multiplicand
  2528  0136  0878               	movf	_Cen1,w
  2529  0137  120A  118A  2689  120A  118A  	fcall	___bmul
  2530  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2531  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2532  013E  072F               	addwf	??_LECT1+2,w
  2533  013F  00B2               	movwf	??_LECT1+5
  2534  0140  0832               	movf	??_LECT1+5,w
  2535  0141  00CC               	movwf	_Dec1
  2536                           
  2537                           ;main.c: 175:     Un1 = (100*v1)/51-(Cen1*100+Dec1*10);
  2538  0142  3033               	movlw	51
  2539  0143  00A4               	movwf	___awdiv@divisor
  2540  0144  3000               	movlw	0
  2541  0145  00A5               	movwf	___awdiv@divisor+1
  2542  0146  0879               	movf	_v1,w
  2543  0147  00AD               	movwf	??_LECT1
  2544  0148  01AE               	clrf	??_LECT1+1
  2545  0149  082D               	movf	??_LECT1,w
  2546  014A  00A0               	movwf	___wmul@multiplier
  2547  014B  082E               	movf	??_LECT1+1,w
  2548  014C  00A1               	movwf	___wmul@multiplier+1
  2549  014D  3064               	movlw	100
  2550  014E  00A2               	movwf	___wmul@multiplicand
  2551  014F  3000               	movlw	0
  2552  0150  00A3               	movwf	___wmul@multiplicand+1
  2553  0151  120A  118A  25E9  120A  118A  	fcall	___wmul
  2554  0156  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0157  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0158  0821               	movf	?___wmul+1,w
  2557  0159  00A7               	movwf	___awdiv@dividend+1
  2558  015A  0820               	movf	?___wmul,w
  2559  015B  00A6               	movwf	___awdiv@dividend
  2560  015C  120A  118A  23C9  120A  118A  	fcall	___awdiv
  2561  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0163  0824               	movf	?___awdiv,w
  2564  0164  00AF               	movwf	??_LECT1+2
  2565  0165  0825               	movf	?___awdiv+1,w
  2566  0166  00B0               	movwf	??_LECT1+3
  2567  0167  309C               	movlw	156
  2568  0168  00B1               	movwf	??_LECT1+4
  2569  0169  0831               	movf	??_LECT1+4,w
  2570  016A  00F4               	movwf	___bmul@multiplicand
  2571  016B  0878               	movf	_Cen1,w
  2572  016C  120A  118A  2689  120A  118A  	fcall	___bmul
  2573  0171  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0172  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0173  00B2               	movwf	??_LECT1+5
  2576  0174  30F6               	movlw	246
  2577  0175  00B3               	movwf	??_LECT1+6
  2578  0176  0833               	movf	??_LECT1+6,w
  2579  0177  00F4               	movwf	___bmul@multiplicand
  2580  0178  084C               	movf	_Dec1,w
  2581  0179  120A  118A  2689  120A  118A  	fcall	___bmul
  2582  017E  1283               	bcf	3,5	;RP0=0, select bank0
  2583  017F  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0180  0732               	addwf	??_LECT1+5,w
  2585  0181  072F               	addwf	??_LECT1+2,w
  2586  0182  00B4               	movwf	??_LECT1+7
  2587  0183  0834               	movf	??_LECT1+7,w
  2588  0184  00C9               	movwf	_Un1
  2589  0185                     l2215:
  2590                           
  2591                           ;main.c: 176:     AC1 = num_ascii(Cen1);
  2592  0185  0878               	movf	_Cen1,w
  2593  0186  120A  118A  2501  120A  118A  	fcall	_num_ascii
  2594  018B  1283               	bcf	3,5	;RP0=0, select bank0
  2595  018C  1303               	bcf	3,6	;RP1=0, select bank0
  2596  018D  00AD               	movwf	??_LECT1
  2597  018E  082D               	movf	??_LECT1,w
  2598  018F  00C6               	movwf	_AC1
  2599  0190                     l2217:
  2600                           
  2601                           ;main.c: 177:     AD1 = num_ascii(Dec1);
  2602  0190  084C               	movf	_Dec1,w
  2603  0191  120A  118A  2501  120A  118A  	fcall	_num_ascii
  2604  0196  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0197  1303               	bcf	3,6	;RP1=0, select bank0
  2606  0198  00AD               	movwf	??_LECT1
  2607  0199  082D               	movf	??_LECT1,w
  2608  019A  00C3               	movwf	_AD1
  2609  019B                     l2219:
  2610                           
  2611                           ;main.c: 178:     AU1 = num_ascii(Un1);
  2612  019B  0849               	movf	_Un1,w
  2613  019C  120A  118A  2501  120A  118A  	fcall	_num_ascii
  2614  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2615  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2616  01A3  00AD               	movwf	??_LECT1
  2617  01A4  082D               	movf	??_LECT1,w
  2618  01A5  00C0               	movwf	_AU1
  2619  01A6                     l162:
  2620  01A6  0008               	return
  2621  01A7                     __end_of_LECT1:
  2622                           
  2623                           	psect	text13
  2624  0501                     __ptext13:	
  2625 ;; *************** function _num_ascii *****************
  2626 ;; Defined at:
  2627 ;;		line 3 in file "ASCII.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  num             1    wreg     unsigned char 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  num             1    0[BANK0 ] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      unsigned char 
  2634 ;; Registers used:
  2635 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         0       0       0       0       0
  2642 ;;      Locals:         0       1       0       0       0
  2643 ;;      Temps:          2       0       0       0       0
  2644 ;;      Totals:         2       1       0       0       0
  2645 ;;Total ram usage:        3 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 2
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_LECT1
  2652 ;;		_LECT2
  2653 ;;		_LECT3
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function _num_ascii
  2659  0501                     _num_ascii:
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  2663                           ;num_ascii@num stored from wreg
  2664  0501  1283               	bcf	3,5	;RP0=0, select bank0
  2665  0502  1303               	bcf	3,6	;RP1=0, select bank0
  2666  0503  00A0               	movwf	num_ascii@num
  2667  0504                     l1977:
  2668                           
  2669                           ;ASCII.c: 4:  switch(num){
  2670  0504  2D19               	goto	l2047
  2671  0505                     l1979:
  2672                           
  2673                           ;ASCII.c: 6:   return 0x30;
  2674  0505  3030               	movlw	48
  2675  0506  2D41               	goto	l228
  2676  0507                     l1991:
  2677                           
  2678                           ;ASCII.c: 14:   return 0x31;
  2679  0507  3031               	movlw	49
  2680  0508  2D41               	goto	l228
  2681  0509                     l1997:
  2682                           
  2683                           ;ASCII.c: 18:   return 0x32;
  2684  0509  3032               	movlw	50
  2685  050A  2D41               	goto	l228
  2686  050B                     l2003:
  2687                           
  2688                           ;ASCII.c: 22:   return 0x33;
  2689  050B  3033               	movlw	51
  2690  050C  2D41               	goto	l228
  2691  050D                     l2009:
  2692                           
  2693                           ;ASCII.c: 26:   return 0x34;
  2694  050D  3034               	movlw	52
  2695  050E  2D41               	goto	l228
  2696  050F                     l2015:
  2697                           
  2698                           ;ASCII.c: 30:   return 0x35;
  2699  050F  3035               	movlw	53
  2700  0510  2D41               	goto	l228
  2701  0511                     l2021:
  2702                           
  2703                           ;ASCII.c: 34:   return 0x36;
  2704  0511  3036               	movlw	54
  2705  0512  2D41               	goto	l228
  2706  0513                     l2027:
  2707                           
  2708                           ;ASCII.c: 38:   return 0x37;
  2709  0513  3037               	movlw	55
  2710  0514  2D41               	goto	l228
  2711  0515                     l2033:
  2712                           
  2713                           ;ASCII.c: 42:   return 0x38;
  2714  0515  3038               	movlw	56
  2715  0516  2D41               	goto	l228
  2716  0517                     l2039:
  2717                           
  2718                           ;ASCII.c: 46:   return 0x39;
  2719  0517  3039               	movlw	57
  2720  0518  2D41               	goto	l228
  2721  0519                     l2047:
  2722  0519  0820               	movf	num_ascii@num,w
  2723  051A  00F4               	movwf	??_num_ascii
  2724  051B  01F5               	clrf	??_num_ascii+1
  2725                           
  2726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2727                           ; Switch size 1, requested type "simple"
  2728                           ; Number of cases is 1, Range of values is 0 to 0
  2729                           ; switch strategies available:
  2730                           ; Name         Instructions Cycles
  2731                           ; simple_byte            4     3 (average)
  2732                           ; direct_byte           11     8 (fixed)
  2733                           ; jumptable            260     6 (fixed)
  2734                           ;	Chosen strategy is simple_byte
  2735  051C  0875               	movf	??_num_ascii+1,w
  2736  051D  3A00               	xorlw	0	; case 0
  2737  051E  1903               	skipnz
  2738  051F  2D21               	goto	l2343
  2739  0520  2D05               	goto	l1979
  2740  0521                     l2343:
  2741                           
  2742                           ; Switch size 1, requested type "simple"
  2743                           ; Number of cases is 10, Range of values is 0 to 9
  2744                           ; switch strategies available:
  2745                           ; Name         Instructions Cycles
  2746                           ; simple_byte           31    16 (average)
  2747                           ; direct_byte           38     8 (fixed)
  2748                           ; jumptable            260     6 (fixed)
  2749                           ;	Chosen strategy is simple_byte
  2750  0521  0874               	movf	??_num_ascii,w
  2751  0522  3A00               	xorlw	0	; case 0
  2752  0523  1903               	skipnz
  2753  0524  2D05               	goto	l1979
  2754  0525  3A01               	xorlw	1	; case 1
  2755  0526  1903               	skipnz
  2756  0527  2D07               	goto	l1991
  2757  0528  3A03               	xorlw	3	; case 2
  2758  0529  1903               	skipnz
  2759  052A  2D09               	goto	l1997
  2760  052B  3A01               	xorlw	1	; case 3
  2761  052C  1903               	skipnz
  2762  052D  2D0B               	goto	l2003
  2763  052E  3A07               	xorlw	7	; case 4
  2764  052F  1903               	skipnz
  2765  0530  2D0D               	goto	l2009
  2766  0531  3A01               	xorlw	1	; case 5
  2767  0532  1903               	skipnz
  2768  0533  2D0F               	goto	l2015
  2769  0534  3A03               	xorlw	3	; case 6
  2770  0535  1903               	skipnz
  2771  0536  2D11               	goto	l2021
  2772  0537  3A01               	xorlw	1	; case 7
  2773  0538  1903               	skipnz
  2774  0539  2D13               	goto	l2027
  2775  053A  3A0F               	xorlw	15	; case 8
  2776  053B  1903               	skipnz
  2777  053C  2D15               	goto	l2033
  2778  053D  3A01               	xorlw	1	; case 9
  2779  053E  1903               	skipnz
  2780  053F  2D17               	goto	l2039
  2781  0540  2D05               	goto	l1979
  2782  0541                     l228:
  2783  0541  0008               	return
  2784  0542                     __end_of_num_ascii:
  2785                           
  2786                           	psect	text14
  2787  05E9                     __ptext14:	
  2788 ;; *************** function ___wmul *****************
  2789 ;; Defined at:
  2790 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2793 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  product         2    4[COMMON] unsigned int 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  2    0[BANK0 ] unsigned int 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2, status,0
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2805 ;;      Params:         0       4       0       0       0
  2806 ;;      Locals:         2       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0
  2808 ;;      Totals:         2       4       0       0       0
  2809 ;;Total ram usage:        6 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; Hardware stack levels required when called: 2
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_LECT1
  2816 ;;		_LECT2
  2817 ;;		_LECT3
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           
  2822                           ;psect for function ___wmul
  2823  05E9                     ___wmul:
  2824  05E9                     l2079:	
  2825                           ;incstack = 0
  2826                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2827                           
  2828  05E9  01F4               	clrf	___wmul@product
  2829  05EA  01F5               	clrf	___wmul@product+1
  2830  05EB                     l2081:
  2831  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2832  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2833  05ED  1C20               	btfss	___wmul@multiplier,0
  2834  05EE  2DF0               	goto	u991
  2835  05EF  2DF1               	goto	u990
  2836  05F0                     u991:
  2837  05F0  2DF7               	goto	l377
  2838  05F1                     u990:
  2839  05F1                     l2083:
  2840  05F1  0822               	movf	___wmul@multiplicand,w
  2841  05F2  07F4               	addwf	___wmul@product,f
  2842  05F3  1803               	skipnc
  2843  05F4  0AF5               	incf	___wmul@product+1,f
  2844  05F5  0823               	movf	___wmul@multiplicand+1,w
  2845  05F6  07F5               	addwf	___wmul@product+1,f
  2846  05F7                     l377:
  2847  05F7  3001               	movlw	1
  2848  05F8                     u1005:
  2849  05F8  1003               	clrc
  2850  05F9  0DA2               	rlf	___wmul@multiplicand,f
  2851  05FA  0DA3               	rlf	___wmul@multiplicand+1,f
  2852  05FB  3EFF               	addlw	-1
  2853  05FC  1D03               	skipz
  2854  05FD  2DF8               	goto	u1005
  2855  05FE                     l2085:
  2856  05FE  3001               	movlw	1
  2857  05FF                     u1015:
  2858  05FF  1003               	clrc
  2859  0600  0CA1               	rrf	___wmul@multiplier+1,f
  2860  0601  0CA0               	rrf	___wmul@multiplier,f
  2861  0602  3EFF               	addlw	-1
  2862  0603  1D03               	skipz
  2863  0604  2DFF               	goto	u1015
  2864  0605                     l2087:
  2865  0605  0820               	movf	___wmul@multiplier,w
  2866  0606  0421               	iorwf	___wmul@multiplier+1,w
  2867  0607  1D03               	btfss	3,2
  2868  0608  2E0A               	goto	u1021
  2869  0609  2E0B               	goto	u1020
  2870  060A                     u1021:
  2871  060A  2DEB               	goto	l2081
  2872  060B                     u1020:
  2873  060B                     l2089:
  2874  060B  0875               	movf	___wmul@product+1,w
  2875  060C  00A1               	movwf	?___wmul+1
  2876  060D  0874               	movf	___wmul@product,w
  2877  060E  00A0               	movwf	?___wmul
  2878  060F                     l379:
  2879  060F  0008               	return
  2880  0610                     __end_of___wmul:
  2881                           
  2882                           	psect	text15
  2883  0689                     __ptext15:	
  2884 ;; *************** function ___bmul *****************
  2885 ;; Defined at:
  2886 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  multiplier      1    wreg     unsigned char 
  2889 ;;  multiplicand    1    4[COMMON] unsigned char 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  multiplier      1    1[BANK0 ] unsigned char 
  2892 ;;  product         1    0[BANK0 ] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      unsigned char 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         1       0       0       0       0
  2903 ;;      Locals:         0       2       0       0       0
  2904 ;;      Temps:          1       0       0       0       0
  2905 ;;      Totals:         2       2       0       0       0
  2906 ;;Total ram usage:        4 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 2
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_LECT1
  2913 ;;		_LECT2
  2914 ;;		_LECT3
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           
  2919                           ;psect for function ___bmul
  2920  0689                     ___bmul:
  2921                           
  2922                           ;incstack = 0
  2923                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2924                           ;___bmul@multiplier stored from wreg
  2925  0689  1283               	bcf	3,5	;RP0=0, select bank0
  2926  068A  1303               	bcf	3,6	;RP1=0, select bank0
  2927  068B  00A1               	movwf	___bmul@multiplier
  2928  068C                     l2093:
  2929  068C  01A0               	clrf	___bmul@product
  2930  068D                     l2095:
  2931  068D  1C21               	btfss	___bmul@multiplier,0
  2932  068E  2E90               	goto	u1031
  2933  068F  2E91               	goto	u1030
  2934  0690                     u1031:
  2935  0690  2E95               	goto	l2099
  2936  0691                     u1030:
  2937  0691                     l2097:
  2938  0691  0874               	movf	___bmul@multiplicand,w
  2939  0692  00F5               	movwf	??___bmul
  2940  0693  0875               	movf	??___bmul,w
  2941  0694  07A0               	addwf	___bmul@product,f
  2942  0695                     l2099:
  2943  0695  1003               	clrc
  2944  0696  0DF4               	rlf	___bmul@multiplicand,f
  2945  0697                     l2101:
  2946  0697  1003               	clrc
  2947  0698  0CA1               	rrf	___bmul@multiplier,f
  2948  0699  0821               	movf	___bmul@multiplier,w
  2949  069A  1D03               	btfss	3,2
  2950  069B  2E9D               	goto	u1041
  2951  069C  2E9E               	goto	u1040
  2952  069D                     u1041:
  2953  069D  2E8D               	goto	l2095
  2954  069E                     u1040:
  2955  069E                     l2103:
  2956  069E  0820               	movf	___bmul@product,w
  2957  069F                     l403:
  2958  069F  0008               	return
  2959  06A0                     __end_of___bmul:
  2960                           
  2961                           	psect	text16
  2962  03C9                     __ptext16:	
  2963 ;; *************** function ___awdiv *****************
  2964 ;; Defined at:
  2965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  divisor         2    4[BANK0 ] int 
  2968 ;;  dividend        2    6[BANK0 ] int 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  quotient        2   11[BANK0 ] int 
  2971 ;;  sign            1   10[BANK0 ] unsigned char 
  2972 ;;  counter         1    9[BANK0 ] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  2    4[BANK0 ] int 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         0       4       0       0       0
  2983 ;;      Locals:         0       4       0       0       0
  2984 ;;      Temps:          0       1       0       0       0
  2985 ;;      Totals:         0       9       0       0       0
  2986 ;;Total ram usage:        9 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 2
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_LECT1
  2993 ;;		_LECT2
  2994 ;;		_LECT3
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function ___awdiv
  3000  03C9                     ___awdiv:
  3001  03C9                     l1569:	
  3002                           ;incstack = 0
  3003                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3004                           
  3005  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  3006  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  3007  03CB  01AA               	clrf	___awdiv@sign
  3008  03CC                     l1571:
  3009  03CC  1FA5               	btfss	___awdiv@divisor+1,7
  3010  03CD  2BCF               	goto	u561
  3011  03CE  2BD0               	goto	u560
  3012  03CF                     u561:
  3013  03CF  2BD7               	goto	l1577
  3014  03D0                     u560:
  3015  03D0                     l1573:
  3016  03D0  09A4               	comf	___awdiv@divisor,f
  3017  03D1  09A5               	comf	___awdiv@divisor+1,f
  3018  03D2  0AA4               	incf	___awdiv@divisor,f
  3019  03D3  1903               	skipnz
  3020  03D4  0AA5               	incf	___awdiv@divisor+1,f
  3021  03D5                     l1575:
  3022  03D5  01AA               	clrf	___awdiv@sign
  3023  03D6  0AAA               	incf	___awdiv@sign,f
  3024  03D7                     l1577:
  3025  03D7  1FA7               	btfss	___awdiv@dividend+1,7
  3026  03D8  2BDA               	goto	u571
  3027  03D9  2BDB               	goto	u570
  3028  03DA                     u571:
  3029  03DA  2BE4               	goto	l1583
  3030  03DB                     u570:
  3031  03DB                     l1579:
  3032  03DB  09A6               	comf	___awdiv@dividend,f
  3033  03DC  09A7               	comf	___awdiv@dividend+1,f
  3034  03DD  0AA6               	incf	___awdiv@dividend,f
  3035  03DE  1903               	skipnz
  3036  03DF  0AA7               	incf	___awdiv@dividend+1,f
  3037  03E0                     l1581:
  3038  03E0  3001               	movlw	1
  3039  03E1  00A8               	movwf	??___awdiv
  3040  03E2  0828               	movf	??___awdiv,w
  3041  03E3  06AA               	xorwf	___awdiv@sign,f
  3042  03E4                     l1583:
  3043  03E4  01AB               	clrf	___awdiv@quotient
  3044  03E5  01AC               	clrf	___awdiv@quotient+1
  3045  03E6                     l1585:
  3046  03E6  0824               	movf	___awdiv@divisor,w
  3047  03E7  0425               	iorwf	___awdiv@divisor+1,w
  3048  03E8  1903               	btfsc	3,2
  3049  03E9  2BEB               	goto	u581
  3050  03EA  2BEC               	goto	u580
  3051  03EB                     u581:
  3052  03EB  2C23               	goto	l1605
  3053  03EC                     u580:
  3054  03EC                     l1587:
  3055  03EC  01A9               	clrf	___awdiv@counter
  3056  03ED  0AA9               	incf	___awdiv@counter,f
  3057  03EE  2BFA               	goto	l1593
  3058  03EF                     l1589:
  3059  03EF  3001               	movlw	1
  3060  03F0                     u595:
  3061  03F0  1003               	clrc
  3062  03F1  0DA4               	rlf	___awdiv@divisor,f
  3063  03F2  0DA5               	rlf	___awdiv@divisor+1,f
  3064  03F3  3EFF               	addlw	-1
  3065  03F4  1D03               	skipz
  3066  03F5  2BF0               	goto	u595
  3067  03F6                     l1591:
  3068  03F6  3001               	movlw	1
  3069  03F7  00A8               	movwf	??___awdiv
  3070  03F8  0828               	movf	??___awdiv,w
  3071  03F9  07A9               	addwf	___awdiv@counter,f
  3072  03FA                     l1593:
  3073  03FA  1FA5               	btfss	___awdiv@divisor+1,7
  3074  03FB  2BFD               	goto	u601
  3075  03FC  2BFE               	goto	u600
  3076  03FD                     u601:
  3077  03FD  2BEF               	goto	l1589
  3078  03FE                     u600:
  3079  03FE                     l1595:
  3080  03FE  3001               	movlw	1
  3081  03FF                     u615:
  3082  03FF  1003               	clrc
  3083  0400  0DAB               	rlf	___awdiv@quotient,f
  3084  0401  0DAC               	rlf	___awdiv@quotient+1,f
  3085  0402  3EFF               	addlw	-1
  3086  0403  1D03               	skipz
  3087  0404  2BFF               	goto	u615
  3088  0405  0825               	movf	___awdiv@divisor+1,w
  3089  0406  0227               	subwf	___awdiv@dividend+1,w
  3090  0407  1D03               	skipz
  3091  0408  2C0B               	goto	u625
  3092  0409  0824               	movf	___awdiv@divisor,w
  3093  040A  0226               	subwf	___awdiv@dividend,w
  3094  040B                     u625:
  3095  040B  1C03               	skipc
  3096  040C  2C0E               	goto	u621
  3097  040D  2C0F               	goto	u620
  3098  040E                     u621:
  3099  040E  2C16               	goto	l1601
  3100  040F                     u620:
  3101  040F                     l1597:
  3102  040F  0824               	movf	___awdiv@divisor,w
  3103  0410  02A6               	subwf	___awdiv@dividend,f
  3104  0411  0825               	movf	___awdiv@divisor+1,w
  3105  0412  1C03               	skipc
  3106  0413  03A7               	decf	___awdiv@dividend+1,f
  3107  0414  02A7               	subwf	___awdiv@dividend+1,f
  3108  0415                     l1599:
  3109  0415  142B               	bsf	___awdiv@quotient,0
  3110  0416                     l1601:
  3111  0416  3001               	movlw	1
  3112  0417                     u635:
  3113  0417  1003               	clrc
  3114  0418  0CA5               	rrf	___awdiv@divisor+1,f
  3115  0419  0CA4               	rrf	___awdiv@divisor,f
  3116  041A  3EFF               	addlw	-1
  3117  041B  1D03               	skipz
  3118  041C  2C17               	goto	u635
  3119  041D                     l1603:
  3120  041D  3001               	movlw	1
  3121  041E  02A9               	subwf	___awdiv@counter,f
  3122  041F  1D03               	btfss	3,2
  3123  0420  2C22               	goto	u641
  3124  0421  2C23               	goto	u640
  3125  0422                     u641:
  3126  0422  2BFE               	goto	l1595
  3127  0423                     u640:
  3128  0423                     l1605:
  3129  0423  082A               	movf	___awdiv@sign,w
  3130  0424  1903               	btfsc	3,2
  3131  0425  2C27               	goto	u651
  3132  0426  2C28               	goto	u650
  3133  0427                     u651:
  3134  0427  2C2D               	goto	l1609
  3135  0428                     u650:
  3136  0428                     l1607:
  3137  0428  09AB               	comf	___awdiv@quotient,f
  3138  0429  09AC               	comf	___awdiv@quotient+1,f
  3139  042A  0AAB               	incf	___awdiv@quotient,f
  3140  042B  1903               	skipnz
  3141  042C  0AAC               	incf	___awdiv@quotient+1,f
  3142  042D                     l1609:
  3143  042D  082C               	movf	___awdiv@quotient+1,w
  3144  042E  00A5               	movwf	?___awdiv+1
  3145  042F  082B               	movf	___awdiv@quotient,w
  3146  0430  00A4               	movwf	?___awdiv
  3147  0431                     l530:
  3148  0431  0008               	return
  3149  0432                     __end_of___awdiv:
  3150                           
  3151                           	psect	text17
  3152  057F                     __ptext17:	
  3153 ;; *************** function _CONTADOR *****************
  3154 ;; Defined at:
  3155 ;;		line 260 in file "main.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0
  3171 ;;      Temps:          1       0       0       0       0
  3172 ;;      Totals:         1       0       0       0       0
  3173 ;;Total ram usage:        1 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 2
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_main
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           
  3184                           ;psect for function _CONTADOR
  3185  057F                     _CONTADOR:
  3186  057F                     l1787:	
  3187                           ;incstack = 0
  3188                           ; Regs used in _CONTADOR: [wreg+status,2+status,0]
  3189                           
  3190                           
  3191                           ;main.c: 261:     if (signo == 43){
  3192  057F  302B               	movlw	43
  3193  0580  0676               	xorwf	_signo,w
  3194  0581  1D03               	btfss	3,2
  3195  0582  2D84               	goto	u861
  3196  0583  2D85               	goto	u860
  3197  0584                     u861:
  3198  0584  2D89               	goto	l1791
  3199  0585                     u860:
  3200  0585                     l1789:
  3201                           
  3202                           ;main.c: 262:         sum = 1;
  3203  0585  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0586  1303               	bcf	3,6	;RP1=0, select bank0
  3205  0587  01BD               	clrf	_sum
  3206  0588  0ABD               	incf	_sum,f
  3207  0589                     l1791:
  3208                           
  3209                           ;main.c: 265:     if (signo == 13 && sum == 1){
  3210  0589  300D               	movlw	13
  3211  058A  0676               	xorwf	_signo,w
  3212  058B  1D03               	btfss	3,2
  3213  058C  2D8E               	goto	u871
  3214  058D  2D8F               	goto	u870
  3215  058E                     u871:
  3216  058E  2D9B               	goto	l1799
  3217  058F                     u870:
  3218  058F                     l1793:
  3219  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0590  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0591  033D               	decf	_sum,w
  3222  0592  1D03               	btfss	3,2
  3223  0593  2D95               	goto	u881
  3224  0594  2D96               	goto	u880
  3225  0595                     u881:
  3226  0595  2D9B               	goto	l1799
  3227  0596                     u880:
  3228  0596                     l1795:
  3229                           
  3230                           ;main.c: 266:             sum = 0;
  3231  0596  01BD               	clrf	_sum
  3232  0597                     l1797:
  3233                           
  3234                           ;main.c: 267:             CONT++;
  3235  0597  3001               	movlw	1
  3236  0598  00F4               	movwf	??_CONTADOR
  3237  0599  0874               	movf	??_CONTADOR,w
  3238  059A  07BB               	addwf	_CONT,f
  3239  059B                     l1799:
  3240                           
  3241                           ;main.c: 270:     if (signo == 45){
  3242  059B  302D               	movlw	45
  3243  059C  0676               	xorwf	_signo,w
  3244  059D  1D03               	btfss	3,2
  3245  059E  2DA0               	goto	u891
  3246  059F  2DA1               	goto	u890
  3247  05A0                     u891:
  3248  05A0  2DA5               	goto	l1803
  3249  05A1                     u890:
  3250  05A1                     l1801:
  3251                           
  3252                           ;main.c: 271:         res = 1;
  3253  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  3254  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  3255  05A3  01BC               	clrf	_res
  3256  05A4  0ABC               	incf	_res,f
  3257  05A5                     l1803:
  3258                           
  3259                           ;main.c: 274:     if(signo ==13 && res == 1){
  3260  05A5  300D               	movlw	13
  3261  05A6  0676               	xorwf	_signo,w
  3262  05A7  1D03               	btfss	3,2
  3263  05A8  2DAA               	goto	u901
  3264  05A9  2DAB               	goto	u900
  3265  05AA                     u901:
  3266  05AA  2DB5               	goto	l194
  3267  05AB                     u900:
  3268  05AB                     l1805:
  3269  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  3270  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  3271  05AD  033C               	decf	_res,w
  3272  05AE  1D03               	btfss	3,2
  3273  05AF  2DB1               	goto	u911
  3274  05B0  2DB2               	goto	u910
  3275  05B1                     u911:
  3276  05B1  2DB5               	goto	l194
  3277  05B2                     u910:
  3278  05B2                     l1807:
  3279                           
  3280                           ;main.c: 275:         res = 0;
  3281  05B2  01BC               	clrf	_res
  3282  05B3                     l1809:
  3283                           
  3284                           ;main.c: 276:         CONT--;
  3285  05B3  3001               	movlw	1
  3286  05B4  02BB               	subwf	_CONT,f
  3287  05B5                     l194:
  3288  05B5  0008               	return
  3289  05B6                     __end_of_CONTADOR:
  3290                           
  3291                           	psect	text18
  3292  04BD                     __ptext18:	
  3293 ;; *************** function _ADCL *****************
  3294 ;; Defined at:
  3295 ;;		line 154 in file "main.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3309 ;;      Params:         0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0
  3311 ;;      Temps:          0       1       0       0       0
  3312 ;;      Totals:         0       1       0       0       0
  3313 ;;Total ram usage:        1 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 3
  3316 ;; This function calls:
  3317 ;;		_ADC_init
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           
  3324                           ;psect for function _ADCL
  3325  04BD                     _ADCL:
  3326  04BD                     l2189:	
  3327                           ;incstack = 0
  3328                           ; Regs used in _ADCL: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3329                           
  3330                           
  3331                           ;main.c: 155:     if (nowadc > 5){
  3332  04BD  3006               	movlw	6
  3333  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  3334  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  3335  04C0  0250               	subwf	_nowadc,w
  3336  04C1  1C03               	skipc
  3337  04C2  2CC4               	goto	u1101
  3338  04C3  2CC5               	goto	u1100
  3339  04C4                     u1101:
  3340  04C4  2D00               	goto	l159
  3341  04C5                     u1100:
  3342  04C5                     l2191:
  3343                           
  3344                           ;main.c: 156:      nowadc = 0;
  3345  04C5  01D0               	clrf	_nowadc
  3346  04C6                     l2193:
  3347                           
  3348                           ;main.c: 157:      ADCON0bits.GO_nDONE = 1;
  3349  04C6  149F               	bsf	31,1	;volatile
  3350  04C7                     l2195:
  3351                           
  3352                           ;main.c: 158:         if (T==0){
  3353  04C7  0852               	movf	_T,w
  3354  04C8  1D03               	btfss	3,2
  3355  04C9  2CCB               	goto	u1111
  3356  04CA  2CCC               	goto	u1110
  3357  04CB                     u1111:
  3358  04CB  2CE8               	goto	l2205
  3359  04CC                     u1110:
  3360  04CC                     l2197:
  3361                           
  3362                           ;main.c: 159:          ADC_init(1, 20);
  3363  04CC  3014               	movlw	20
  3364  04CD  00A2               	movwf	??_ADCL
  3365  04CE  0822               	movf	??_ADCL,w
  3366  04CF  00F4               	movwf	ADC_init@chan
  3367  04D0  3001               	movlw	1
  3368  04D1  120A  118A  21A7  120A  118A  	fcall	_ADC_init
  3369  04D6                     l2199:
  3370                           
  3371                           ;main.c: 160:          v1 = anlec;
  3372  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  3373  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  3374  04D8  084F               	movf	_anlec,w
  3375  04D9  00A2               	movwf	??_ADCL
  3376  04DA  0822               	movf	??_ADCL,w
  3377  04DB  00F9               	movwf	_v1
  3378  04DC                     l2201:
  3379                           
  3380                           ;main.c: 161:          _delay((unsigned long)((100)*(4000000/4000000.0)));
  3381  04DC  3020               	movlw	32
  3382  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  3383  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  3384  04DF  00A2               	movwf	??_ADCL
  3385  04E0                     u1177:
  3386  04E0  0BA2               	decfsz	??_ADCL,f
  3387  04E1  2CE0               	goto	u1177
  3388  04E2  0000               	nop
  3389  04E3                     l2203:
  3390                           
  3391                           ;main.c: 162:          T = 1;
  3392  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3393  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3394  04E5  01D2               	clrf	_T
  3395  04E6  0AD2               	incf	_T,f
  3396                           
  3397                           ;main.c: 163:     }
  3398  04E7  2D00               	goto	l159
  3399  04E8                     l2205:
  3400                           
  3401                           ;main.c: 165:          ADC_init(1, 1);
  3402  04E8  01F4               	clrf	ADC_init@chan
  3403  04E9  0AF4               	incf	ADC_init@chan,f
  3404  04EA  3001               	movlw	1
  3405  04EB  120A  118A  21A7  120A  118A  	fcall	_ADC_init
  3406  04F0                     l2207:
  3407                           
  3408                           ;main.c: 166:          v2 = anlec;
  3409  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  3410  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  3411  04F2  084F               	movf	_anlec,w
  3412  04F3  00A2               	movwf	??_ADCL
  3413  04F4  0822               	movf	??_ADCL,w
  3414  04F5  00D1               	movwf	_v2
  3415  04F6                     l2209:
  3416                           
  3417                           ;main.c: 167:          _delay((unsigned long)((100)*(4000000/4000000.0)));
  3418  04F6  3020               	movlw	32
  3419  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  3420  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  3421  04F9  00A2               	movwf	??_ADCL
  3422  04FA                     u1187:
  3423  04FA  0BA2               	decfsz	??_ADCL,f
  3424  04FB  2CFA               	goto	u1187
  3425  04FC  0000               	nop
  3426  04FD                     l2211:
  3427                           
  3428                           ;main.c: 168:          T = 0;
  3429  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  3430  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  3431  04FF  01D2               	clrf	_T
  3432  0500                     l159:
  3433  0500  0008               	return
  3434  0501                     __end_of_ADCL:
  3435                           
  3436                           	psect	text19
  3437  01A7                     __ptext19:	
  3438 ;; *************** function _ADC_init *****************
  3439 ;; Defined at:
  3440 ;;		line 3 in file "ADC.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  vel             1    wreg     unsigned char 
  3443 ;;  chan            1    4[COMMON] unsigned char 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  vel             1    5[COMMON] unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3455 ;;      Params:         1       0       0       0       0
  3456 ;;      Locals:         1       0       0       0       0
  3457 ;;      Temps:          0       2       0       0       0
  3458 ;;      Totals:         2       2       0       0       0
  3459 ;;Total ram usage:        4 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; Hardware stack levels required when called: 2
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_Setup
  3466 ;;		_ADCL
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           
  3471                           ;psect for function _ADC_init
  3472  01A7                     _ADC_init:
  3473                           
  3474                           ;incstack = 0
  3475                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
  3476                           ;ADC_init@vel stored from wreg
  3477  01A7  00F5               	movwf	ADC_init@vel
  3478  01A8                     l1957:
  3479                           
  3480                           ;ADC.c: 4:     switch(vel){
  3481  01A8  29B5               	goto	l1961
  3482  01A9                     l202:	
  3483                           ;ADC.c: 5:         case 1:
  3484                           
  3485                           
  3486                           ;ADC.c: 6:             ADCON0bits.ADCS0 = 1;
  3487  01A9  171F               	bsf	31,6	;volatile
  3488                           
  3489                           ;ADC.c: 7:             ADCON0bits.ADCS1 = 0;
  3490  01AA  139F               	bcf	31,7	;volatile
  3491                           
  3492                           ;ADC.c: 8:             break;
  3493  01AB  2A10               	goto	l1965
  3494  01AC                     l204:	
  3495                           ;ADC.c: 9:         case 2:
  3496                           
  3497                           
  3498                           ;ADC.c: 10:             ADCON0bits.ADCS0 = 0;
  3499  01AC  131F               	bcf	31,6	;volatile
  3500                           
  3501                           ;ADC.c: 11:             ADCON0bits.ADCS1 = 1;
  3502  01AD  179F               	bsf	31,7	;volatile
  3503                           
  3504                           ;ADC.c: 12:             break;
  3505  01AE  2A10               	goto	l1965
  3506  01AF                     l205:	
  3507                           ;ADC.c: 13:         case 3:
  3508                           
  3509                           
  3510                           ;ADC.c: 14:             ADCON0bits.ADCS0 = 1;
  3511  01AF  171F               	bsf	31,6	;volatile
  3512                           
  3513                           ;ADC.c: 15:             ADCON0bits.ADCS1 = 1;
  3514  01B0  179F               	bsf	31,7	;volatile
  3515                           
  3516                           ;ADC.c: 16:             break;
  3517  01B1  2A10               	goto	l1965
  3518  01B2                     l206:	
  3519                           ;ADC.c: 17:         default:
  3520                           
  3521                           
  3522                           ;ADC.c: 18:             ADCON0bits.ADCS0 = 0;
  3523  01B2  131F               	bcf	31,6	;volatile
  3524                           
  3525                           ;ADC.c: 19:             ADCON0bits.ADCS1 = 0;
  3526  01B3  139F               	bcf	31,7	;volatile
  3527                           
  3528                           ;ADC.c: 20:             break;
  3529  01B4  2A10               	goto	l1965
  3530  01B5                     l1961:
  3531  01B5  0875               	movf	ADC_init@vel,w
  3532  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  3533  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  3534  01B8  00A0               	movwf	??_ADC_init
  3535  01B9  01A1               	clrf	??_ADC_init+1
  3536                           
  3537                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3538                           ; Switch size 1, requested type "simple"
  3539                           ; Number of cases is 1, Range of values is 0 to 0
  3540                           ; switch strategies available:
  3541                           ; Name         Instructions Cycles
  3542                           ; simple_byte            4     3 (average)
  3543                           ; direct_byte           11     8 (fixed)
  3544                           ; jumptable            260     6 (fixed)
  3545                           ;	Chosen strategy is simple_byte
  3546  01BA  0821               	movf	??_ADC_init+1,w
  3547  01BB  3A00               	xorlw	0	; case 0
  3548  01BC  1903               	skipnz
  3549  01BD  29BF               	goto	l2345
  3550  01BE  29B2               	goto	l206
  3551  01BF                     l2345:
  3552                           
  3553                           ; Switch size 1, requested type "simple"
  3554                           ; Number of cases is 3, Range of values is 1 to 3
  3555                           ; switch strategies available:
  3556                           ; Name         Instructions Cycles
  3557                           ; simple_byte           10     6 (average)
  3558                           ; direct_byte           20    11 (fixed)
  3559                           ; jumptable            263     9 (fixed)
  3560                           ;	Chosen strategy is simple_byte
  3561  01BF  0820               	movf	??_ADC_init,w
  3562  01C0  3A01               	xorlw	1	; case 1
  3563  01C1  1903               	skipnz
  3564  01C2  29A9               	goto	l202
  3565  01C3  3A03               	xorlw	3	; case 2
  3566  01C4  1903               	skipnz
  3567  01C5  29AC               	goto	l204
  3568  01C6  3A01               	xorlw	1	; case 3
  3569  01C7  1903               	skipnz
  3570  01C8  29AF               	goto	l205
  3571  01C9  29B2               	goto	l206
  3572  01CA                     l208:	
  3573                           ;ADC.c: 24:         default:
  3574                           
  3575                           
  3576                           ;ADC.c: 25:             ADCON0bits.CHS0 = 0;
  3577  01CA  111F               	bcf	31,2	;volatile
  3578                           
  3579                           ;ADC.c: 26:             ADCON0bits.CHS1 = 0;
  3580  01CB  119F               	bcf	31,3	;volatile
  3581                           
  3582                           ;ADC.c: 27:             ADCON0bits.CHS2 = 0;
  3583  01CC  121F               	bcf	31,4	;volatile
  3584                           
  3585                           ;ADC.c: 28:             ADCON0bits.CHS3 = 0;
  3586  01CD  129F               	bcf	31,5	;volatile
  3587                           
  3588                           ;ADC.c: 29:             break;
  3589  01CE  2A41               	goto	l209
  3590  01CF                     l210:	
  3591                           ;ADC.c: 30:         case 1:
  3592                           
  3593                           
  3594                           ;ADC.c: 31:             ADCON0bits.CHS0 = 1;
  3595  01CF  151F               	bsf	31,2	;volatile
  3596                           
  3597                           ;ADC.c: 32:             ADCON0bits.CHS1 = 0;
  3598  01D0  119F               	bcf	31,3	;volatile
  3599                           
  3600                           ;ADC.c: 33:             ADCON0bits.CHS2 = 0;
  3601  01D1  121F               	bcf	31,4	;volatile
  3602                           
  3603                           ;ADC.c: 34:             ADCON0bits.CHS3 = 0;
  3604  01D2  129F               	bcf	31,5	;volatile
  3605                           
  3606                           ;ADC.c: 35:             break;
  3607  01D3  2A41               	goto	l209
  3608  01D4                     l211:	
  3609                           ;ADC.c: 36:         case 2:
  3610                           
  3611                           
  3612                           ;ADC.c: 37:             ADCON0bits.CHS0 = 0;
  3613  01D4  111F               	bcf	31,2	;volatile
  3614                           
  3615                           ;ADC.c: 38:             ADCON0bits.CHS1 = 1;
  3616  01D5  159F               	bsf	31,3	;volatile
  3617                           
  3618                           ;ADC.c: 39:             ADCON0bits.CHS2 = 0;
  3619  01D6  121F               	bcf	31,4	;volatile
  3620                           
  3621                           ;ADC.c: 40:             ADCON0bits.CHS3 = 0;
  3622  01D7  129F               	bcf	31,5	;volatile
  3623                           
  3624                           ;ADC.c: 41:             break;
  3625  01D8  2A41               	goto	l209
  3626  01D9                     l212:	
  3627                           ;ADC.c: 42:         case 3:
  3628                           
  3629                           
  3630                           ;ADC.c: 43:             ADCON0bits.CHS0 = 1;
  3631  01D9  151F               	bsf	31,2	;volatile
  3632                           
  3633                           ;ADC.c: 44:             ADCON0bits.CHS1 = 1;
  3634  01DA  159F               	bsf	31,3	;volatile
  3635                           
  3636                           ;ADC.c: 45:             ADCON0bits.CHS2 = 0;
  3637  01DB  121F               	bcf	31,4	;volatile
  3638                           
  3639                           ;ADC.c: 46:             ADCON0bits.CHS3 = 0;
  3640  01DC  129F               	bcf	31,5	;volatile
  3641                           
  3642                           ;ADC.c: 47:             break;
  3643  01DD  2A41               	goto	l209
  3644  01DE                     l213:	
  3645                           ;ADC.c: 48:         case 4:
  3646                           
  3647                           
  3648                           ;ADC.c: 49:             ADCON0bits.CHS0 = 0;
  3649  01DE  111F               	bcf	31,2	;volatile
  3650                           
  3651                           ;ADC.c: 50:             ADCON0bits.CHS1 = 0;
  3652  01DF  119F               	bcf	31,3	;volatile
  3653                           
  3654                           ;ADC.c: 51:             ADCON0bits.CHS2 = 1;
  3655  01E0  161F               	bsf	31,4	;volatile
  3656                           
  3657                           ;ADC.c: 52:             ADCON0bits.CHS3 = 0;
  3658  01E1  129F               	bcf	31,5	;volatile
  3659                           
  3660                           ;ADC.c: 53:             break;
  3661  01E2  2A41               	goto	l209
  3662  01E3                     l214:	
  3663                           ;ADC.c: 54:         case 5:
  3664                           
  3665                           
  3666                           ;ADC.c: 55:             ADCON0bits.CHS0 = 1;
  3667  01E3  151F               	bsf	31,2	;volatile
  3668                           
  3669                           ;ADC.c: 56:             ADCON0bits.CHS1 = 0;
  3670  01E4  119F               	bcf	31,3	;volatile
  3671                           
  3672                           ;ADC.c: 57:             ADCON0bits.CHS2 = 1;
  3673  01E5  161F               	bsf	31,4	;volatile
  3674                           
  3675                           ;ADC.c: 58:             ADCON0bits.CHS3 = 0;
  3676  01E6  129F               	bcf	31,5	;volatile
  3677                           
  3678                           ;ADC.c: 59:             break;
  3679  01E7  2A41               	goto	l209
  3680  01E8                     l215:	
  3681                           ;ADC.c: 60:         case 6:
  3682                           
  3683                           
  3684                           ;ADC.c: 61:             ADCON0bits.CHS0 = 0;
  3685  01E8  111F               	bcf	31,2	;volatile
  3686                           
  3687                           ;ADC.c: 62:             ADCON0bits.CHS1 = 1;
  3688  01E9  159F               	bsf	31,3	;volatile
  3689                           
  3690                           ;ADC.c: 63:             ADCON0bits.CHS2 = 1;
  3691  01EA  161F               	bsf	31,4	;volatile
  3692                           
  3693                           ;ADC.c: 64:             ADCON0bits.CHS3 = 0;
  3694  01EB  129F               	bcf	31,5	;volatile
  3695                           
  3696                           ;ADC.c: 65:             break;
  3697  01EC  2A41               	goto	l209
  3698  01ED                     l216:	
  3699                           ;ADC.c: 66:         case 7:
  3700                           
  3701                           
  3702                           ;ADC.c: 67:             ADCON0bits.CHS0 = 1;
  3703  01ED  151F               	bsf	31,2	;volatile
  3704                           
  3705                           ;ADC.c: 68:             ADCON0bits.CHS1 = 1;
  3706  01EE  159F               	bsf	31,3	;volatile
  3707                           
  3708                           ;ADC.c: 69:             ADCON0bits.CHS2 = 1;
  3709  01EF  161F               	bsf	31,4	;volatile
  3710                           
  3711                           ;ADC.c: 70:             ADCON0bits.CHS3 = 0;
  3712  01F0  129F               	bcf	31,5	;volatile
  3713                           
  3714                           ;ADC.c: 71:             break;
  3715  01F1  2A41               	goto	l209
  3716  01F2                     l217:	
  3717                           ;ADC.c: 72:         case 8:
  3718                           
  3719                           
  3720                           ;ADC.c: 73:             ADCON0bits.CHS0 = 0;
  3721  01F2  111F               	bcf	31,2	;volatile
  3722                           
  3723                           ;ADC.c: 74:             ADCON0bits.CHS1 = 0;
  3724  01F3  119F               	bcf	31,3	;volatile
  3725                           
  3726                           ;ADC.c: 75:             ADCON0bits.CHS2 = 0;
  3727  01F4  121F               	bcf	31,4	;volatile
  3728                           
  3729                           ;ADC.c: 76:             ADCON0bits.CHS3 = 1;
  3730  01F5  169F               	bsf	31,5	;volatile
  3731                           
  3732                           ;ADC.c: 77:             break;
  3733  01F6  2A41               	goto	l209
  3734  01F7                     l218:	
  3735                           ;ADC.c: 78:         case 9:
  3736                           
  3737                           
  3738                           ;ADC.c: 79:             ADCON0bits.CHS0 = 1;
  3739  01F7  151F               	bsf	31,2	;volatile
  3740                           
  3741                           ;ADC.c: 80:             ADCON0bits.CHS1 = 0;
  3742  01F8  119F               	bcf	31,3	;volatile
  3743                           
  3744                           ;ADC.c: 81:             ADCON0bits.CHS2 = 0;
  3745  01F9  121F               	bcf	31,4	;volatile
  3746                           
  3747                           ;ADC.c: 82:             ADCON0bits.CHS3 = 1;
  3748  01FA  169F               	bsf	31,5	;volatile
  3749                           
  3750                           ;ADC.c: 83:             break;
  3751  01FB  2A41               	goto	l209
  3752  01FC                     l219:	
  3753                           ;ADC.c: 84:         case 10:
  3754                           
  3755                           
  3756                           ;ADC.c: 85:             ADCON0bits.CHS0 = 0;
  3757  01FC  111F               	bcf	31,2	;volatile
  3758                           
  3759                           ;ADC.c: 86:             ADCON0bits.CHS1 = 1;
  3760  01FD  159F               	bsf	31,3	;volatile
  3761                           
  3762                           ;ADC.c: 87:             ADCON0bits.CHS2 = 0;
  3763  01FE  121F               	bcf	31,4	;volatile
  3764                           
  3765                           ;ADC.c: 88:             ADCON0bits.CHS3 = 1;
  3766  01FF  169F               	bsf	31,5	;volatile
  3767                           
  3768                           ;ADC.c: 89:             break;
  3769  0200  2A41               	goto	l209
  3770  0201                     l220:	
  3771                           ;ADC.c: 90:         case 11:
  3772                           
  3773                           
  3774                           ;ADC.c: 91:             ADCON0bits.CHS0 = 1;
  3775  0201  151F               	bsf	31,2	;volatile
  3776                           
  3777                           ;ADC.c: 92:             ADCON0bits.CHS1 = 1;
  3778  0202  159F               	bsf	31,3	;volatile
  3779                           
  3780                           ;ADC.c: 93:             ADCON0bits.CHS2 = 0;
  3781  0203  121F               	bcf	31,4	;volatile
  3782                           
  3783                           ;ADC.c: 94:             ADCON0bits.CHS3 = 1;
  3784  0204  169F               	bsf	31,5	;volatile
  3785                           
  3786                           ;ADC.c: 95:             break;
  3787  0205  2A41               	goto	l209
  3788  0206                     l221:	
  3789                           ;ADC.c: 96:         case 12:
  3790                           
  3791                           
  3792                           ;ADC.c: 97:             ADCON0bits.CHS0 = 0;
  3793  0206  111F               	bcf	31,2	;volatile
  3794                           
  3795                           ;ADC.c: 98:             ADCON0bits.CHS1 = 0;
  3796  0207  119F               	bcf	31,3	;volatile
  3797                           
  3798                           ;ADC.c: 99:             ADCON0bits.CHS2 = 1;
  3799  0208  161F               	bsf	31,4	;volatile
  3800                           
  3801                           ;ADC.c: 100:             ADCON0bits.CHS3 = 1;
  3802  0209  169F               	bsf	31,5	;volatile
  3803                           
  3804                           ;ADC.c: 101:             break;
  3805  020A  2A41               	goto	l209
  3806  020B                     l222:	
  3807                           ;ADC.c: 102:         case 13:
  3808                           
  3809                           
  3810                           ;ADC.c: 103:             ADCON0bits.CHS0 = 1;
  3811  020B  151F               	bsf	31,2	;volatile
  3812                           
  3813                           ;ADC.c: 104:             ADCON0bits.CHS1 = 0;
  3814  020C  119F               	bcf	31,3	;volatile
  3815                           
  3816                           ;ADC.c: 105:             ADCON0bits.CHS2 = 1;
  3817  020D  161F               	bsf	31,4	;volatile
  3818                           
  3819                           ;ADC.c: 106:             ADCON0bits.CHS3 = 1;
  3820  020E  169F               	bsf	31,5	;volatile
  3821                           
  3822                           ;ADC.c: 107:             break;
  3823  020F  2A41               	goto	l209
  3824  0210                     l1965:
  3825  0210  0874               	movf	ADC_init@chan,w
  3826  0211  00A0               	movwf	??_ADC_init
  3827  0212  01A1               	clrf	??_ADC_init+1
  3828                           
  3829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3830                           ; Switch size 1, requested type "simple"
  3831                           ; Number of cases is 1, Range of values is 0 to 0
  3832                           ; switch strategies available:
  3833                           ; Name         Instructions Cycles
  3834                           ; simple_byte            4     3 (average)
  3835                           ; direct_byte           11     8 (fixed)
  3836                           ; jumptable            260     6 (fixed)
  3837                           ;	Chosen strategy is simple_byte
  3838  0213  0821               	movf	??_ADC_init+1,w
  3839  0214  3A00               	xorlw	0	; case 0
  3840  0215  1903               	skipnz
  3841  0216  2A18               	goto	l2347
  3842  0217  29CA               	goto	l208
  3843  0218                     l2347:
  3844                           
  3845                           ; Switch size 1, requested type "simple"
  3846                           ; Number of cases is 13, Range of values is 1 to 13
  3847                           ; switch strategies available:
  3848                           ; Name         Instructions Cycles
  3849                           ; simple_byte           40    21 (average)
  3850                           ; direct_byte           50    11 (fixed)
  3851                           ; jumptable            263     9 (fixed)
  3852                           ;	Chosen strategy is simple_byte
  3853  0218  0820               	movf	??_ADC_init,w
  3854  0219  3A01               	xorlw	1	; case 1
  3855  021A  1903               	skipnz
  3856  021B  29CF               	goto	l210
  3857  021C  3A03               	xorlw	3	; case 2
  3858  021D  1903               	skipnz
  3859  021E  29D4               	goto	l211
  3860  021F  3A01               	xorlw	1	; case 3
  3861  0220  1903               	skipnz
  3862  0221  29D9               	goto	l212
  3863  0222  3A07               	xorlw	7	; case 4
  3864  0223  1903               	skipnz
  3865  0224  29DE               	goto	l213
  3866  0225  3A01               	xorlw	1	; case 5
  3867  0226  1903               	skipnz
  3868  0227  29E3               	goto	l214
  3869  0228  3A03               	xorlw	3	; case 6
  3870  0229  1903               	skipnz
  3871  022A  29E8               	goto	l215
  3872  022B  3A01               	xorlw	1	; case 7
  3873  022C  1903               	skipnz
  3874  022D  29ED               	goto	l216
  3875  022E  3A0F               	xorlw	15	; case 8
  3876  022F  1903               	skipnz
  3877  0230  29F2               	goto	l217
  3878  0231  3A01               	xorlw	1	; case 9
  3879  0232  1903               	skipnz
  3880  0233  29F7               	goto	l218
  3881  0234  3A03               	xorlw	3	; case 10
  3882  0235  1903               	skipnz
  3883  0236  29FC               	goto	l219
  3884  0237  3A01               	xorlw	1	; case 11
  3885  0238  1903               	skipnz
  3886  0239  2A01               	goto	l220
  3887  023A  3A07               	xorlw	7	; case 12
  3888  023B  1903               	skipnz
  3889  023C  2A06               	goto	l221
  3890  023D  3A01               	xorlw	1	; case 13
  3891  023E  1903               	skipnz
  3892  023F  2A0B               	goto	l222
  3893  0240  29CA               	goto	l208
  3894  0241                     l209:
  3895                           
  3896                           ;ADC.c: 109:     ADCON0bits.GO = 0;
  3897  0241  109F               	bcf	31,1	;volatile
  3898                           
  3899                           ;ADC.c: 110:     ADCON0bits.ADON = 1;
  3900  0242  141F               	bsf	31,0	;volatile
  3901  0243                     l1967:
  3902                           
  3903                           ;ADC.c: 111:     ADCON1 = 0;
  3904  0243  1683               	bsf	3,5	;RP0=1, select bank1
  3905  0244  1303               	bcf	3,6	;RP1=0, select bank1
  3906  0245  019F               	clrf	31	;volatile
  3907  0246                     l223:
  3908  0246  0008               	return
  3909  0247                     __end_of_ADC_init:
  3910                           
  3911                           	psect	text20
  3912  05B6                     __ptext20:	
  3913 ;; *************** function _ISR *****************
  3914 ;; Defined at:
  3915 ;;		line 78 in file "main.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0, pclath, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3929 ;;      Params:         0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0
  3931 ;;      Temps:          3       0       0       0       0
  3932 ;;      Totals:         3       0       0       0       0
  3933 ;;Total ram usage:        3 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; Hardware stack levels required when called: 1
  3936 ;; This function calls:
  3937 ;;		_envio
  3938 ;; This function is called by:
  3939 ;;		Interrupt level 1
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           
  3944                           ;psect for function _ISR
  3945  05B6                     _ISR:
  3946  05B6                     i1l1835:
  3947                           
  3948                           ;main.c: 79:     if(INTCONbits.TMR0IF == 1){
  3949  05B6  1D0B               	btfss	11,2	;volatile
  3950  05B7  2DB9               	goto	u92_21
  3951  05B8  2DBA               	goto	u92_20
  3952  05B9                     u92_21:
  3953  05B9  2DC3               	goto	i1l1843
  3954  05BA                     u92_20:
  3955  05BA                     i1l1837:
  3956                           
  3957                           ;main.c: 80:         INTCONbits.TMR0IF = 0;
  3958  05BA  110B               	bcf	11,2	;volatile
  3959  05BB                     i1l1839:
  3960                           
  3961                           ;main.c: 81:         TMR0 = 236;
  3962  05BB  30EC               	movlw	236
  3963  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3964  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3965  05BE  0081               	movwf	1	;volatile
  3966  05BF                     i1l1841:
  3967                           
  3968                           ;main.c: 82:         nowadc++;
  3969  05BF  3001               	movlw	1
  3970  05C0  00F1               	movwf	??_ISR
  3971  05C1  0871               	movf	??_ISR,w
  3972  05C2  07D0               	addwf	_nowadc,f
  3973  05C3                     i1l1843:
  3974                           
  3975                           ;main.c: 84:     if (PIR1bits.ADIF == 1){
  3976  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3977  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  3978  05C5  1F0C               	btfss	12,6	;volatile
  3979  05C6  2DC8               	goto	u93_21
  3980  05C7  2DC9               	goto	u93_20
  3981  05C8                     u93_21:
  3982  05C8  2DCE               	goto	i1l1849
  3983  05C9                     u93_20:
  3984  05C9                     i1l1845:
  3985                           
  3986                           ;main.c: 85:         PIR1bits.ADIF = 0;
  3987  05C9  130C               	bcf	12,6	;volatile
  3988  05CA                     i1l1847:
  3989                           
  3990                           ;main.c: 86:         anlec = ADRESH;
  3991  05CA  081E               	movf	30,w	;volatile
  3992  05CB  00F1               	movwf	??_ISR
  3993  05CC  0871               	movf	??_ISR,w
  3994  05CD  00CF               	movwf	_anlec
  3995  05CE                     i1l1849:
  3996                           
  3997                           ;main.c: 88:     if (PIR1bits.RCIF == 1){
  3998  05CE  1E8C               	btfss	12,5	;volatile
  3999  05CF  2DD1               	goto	u94_21
  4000  05D0  2DD2               	goto	u94_20
  4001  05D1                     u94_21:
  4002  05D1  2DD6               	goto	i1l1853
  4003  05D2                     u94_20:
  4004  05D2                     i1l1851:
  4005                           
  4006                           ;main.c: 89:         signo = RCREG;
  4007  05D2  081A               	movf	26,w	;volatile
  4008  05D3  00F1               	movwf	??_ISR
  4009  05D4  0871               	movf	??_ISR,w
  4010  05D5  00F6               	movwf	_signo
  4011  05D6                     i1l1853:
  4012                           
  4013                           ;main.c: 91:     if (PIR1bits.TXIF == 1){
  4014  05D6  1E0C               	btfss	12,4	;volatile
  4015  05D7  2DD9               	goto	u95_21
  4016  05D8  2DDA               	goto	u95_20
  4017  05D9                     u95_21:
  4018  05D9  2DE2               	goto	i1l141
  4019  05DA                     u95_20:
  4020  05DA                     i1l1855:
  4021                           
  4022                           ;main.c: 92:         envio();
  4023  05DA  120A  118A  2247  120A  118A  	fcall	_envio
  4024  05DF                     i1l1857:
  4025                           
  4026                           ;main.c: 93:         PIE1bits.TXIE = 0;
  4027  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  4028  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  4029  05E1  120C               	bcf	12,4	;volatile
  4030  05E2                     i1l141:
  4031  05E2  0873               	movf	??_ISR+2,w
  4032  05E3  008A               	movwf	10
  4033  05E4  0E72               	swapf	??_ISR+1,w
  4034  05E5  0083               	movwf	3
  4035  05E6  0EFE               	swapf	btemp,f
  4036  05E7  0E7E               	swapf	btemp,w
  4037  05E8  0009               	retfie
  4038  05E9                     __end_of_ISR:
  4039                           
  4040                           	psect	intentry
  4041  0004                     __pintentry:	
  4042                           ;incstack = 0
  4043                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4044                           
  4045  0004                     interrupt_function:
  4046  007E                     saved_w	set	btemp
  4047  0004  00FE               	movwf	btemp
  4048  0005  0E03               	swapf	3,w
  4049  0006  00F2               	movwf	??_ISR+1
  4050  0007  080A               	movf	10,w
  4051  0008  00F3               	movwf	??_ISR+2
  4052  0009  120A  118A  2DB6   	ljmp	_ISR
  4053                           
  4054                           	psect	text21
  4055  0247                     __ptext21:	
  4056 ;; *************** function _envio *****************
  4057 ;; Defined at:
  4058 ;;		line 217 in file "main.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;		None
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      void 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4072 ;;      Params:         0       0       0       0       0
  4073 ;;      Locals:         0       0       0       0       0
  4074 ;;      Temps:          1       0       0       0       0
  4075 ;;      Totals:         1       0       0       0       0
  4076 ;;Total ram usage:        1 bytes
  4077 ;; Hardware stack levels used: 1
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_ISR
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           
  4086                           ;psect for function _envio
  4087  0247                     _envio:
  4088  0247                     i1l1613:	
  4089                           ;incstack = 0
  4090                           ; Regs used in _envio: [wreg+status,2+status,0]
  4091                           
  4092                           
  4093                           ;main.c: 218:     toggleTX++;
  4094  0247  3001               	movlw	1
  4095  0248  00F0               	movwf	??_envio
  4096  0249  0870               	movf	??_envio,w
  4097  024A  07F7               	addwf	_toggleTX,f
  4098                           
  4099                           ;main.c: 219:     if (toggleTX == 1){
  4100  024B  0377               	decf	_toggleTX,w
  4101  024C  1D03               	btfss	3,2
  4102  024D  2A4F               	goto	u66_21
  4103  024E  2A50               	goto	u66_20
  4104  024F                     u66_21:
  4105  024F  2A54               	goto	i1l1617
  4106  0250                     u66_20:
  4107  0250                     i1l1615:
  4108                           
  4109                           ;main.c: 220:         TXREG = AC1;
  4110  0250  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0251  1303               	bcf	3,6	;RP1=0, select bank0
  4112  0252  0846               	movf	_AC1,w
  4113  0253  0099               	movwf	25	;volatile
  4114  0254                     i1l1617:
  4115                           
  4116                           ;main.c: 222:     if (toggleTX == 2){
  4117  0254  3002               	movlw	2
  4118  0255  0677               	xorwf	_toggleTX,w
  4119  0256  1D03               	btfss	3,2
  4120  0257  2A59               	goto	u67_21
  4121  0258  2A5A               	goto	u67_20
  4122  0259                     u67_21:
  4123  0259  2A5E               	goto	i1l1621
  4124  025A                     u67_20:
  4125  025A                     i1l1619:
  4126                           
  4127                           ;main.c: 223:         TXREG = 0x2E;
  4128  025A  302E               	movlw	46
  4129  025B  1283               	bcf	3,5	;RP0=0, select bank0
  4130  025C  1303               	bcf	3,6	;RP1=0, select bank0
  4131  025D  0099               	movwf	25	;volatile
  4132  025E                     i1l1621:
  4133                           
  4134                           ;main.c: 225:     if (toggleTX == 3){
  4135  025E  3003               	movlw	3
  4136  025F  0677               	xorwf	_toggleTX,w
  4137  0260  1D03               	btfss	3,2
  4138  0261  2A63               	goto	u68_21
  4139  0262  2A64               	goto	u68_20
  4140  0263                     u68_21:
  4141  0263  2A68               	goto	i1l1625
  4142  0264                     u68_20:
  4143  0264                     i1l1623:
  4144                           
  4145                           ;main.c: 226:         TXREG = AD1;
  4146  0264  1283               	bcf	3,5	;RP0=0, select bank0
  4147  0265  1303               	bcf	3,6	;RP1=0, select bank0
  4148  0266  0843               	movf	_AD1,w
  4149  0267  0099               	movwf	25	;volatile
  4150  0268                     i1l1625:
  4151                           
  4152                           ;main.c: 228:     if (toggleTX == 4){
  4153  0268  3004               	movlw	4
  4154  0269  0677               	xorwf	_toggleTX,w
  4155  026A  1D03               	btfss	3,2
  4156  026B  2A6D               	goto	u69_21
  4157  026C  2A6E               	goto	u69_20
  4158  026D                     u69_21:
  4159  026D  2A72               	goto	i1l1629
  4160  026E                     u69_20:
  4161  026E                     i1l1627:
  4162                           
  4163                           ;main.c: 229:         TXREG = AU1;
  4164  026E  1283               	bcf	3,5	;RP0=0, select bank0
  4165  026F  1303               	bcf	3,6	;RP1=0, select bank0
  4166  0270  0840               	movf	_AU1,w
  4167  0271  0099               	movwf	25	;volatile
  4168  0272                     i1l1629:
  4169                           
  4170                           ;main.c: 231:     if (toggleTX == 5){
  4171  0272  3005               	movlw	5
  4172  0273  0677               	xorwf	_toggleTX,w
  4173  0274  1D03               	btfss	3,2
  4174  0275  2A77               	goto	u70_21
  4175  0276  2A78               	goto	u70_20
  4176  0277                     u70_21:
  4177  0277  2A7C               	goto	i1l1633
  4178  0278                     u70_20:
  4179  0278                     i1l1631:
  4180                           
  4181                           ;main.c: 232:         TXREG = 0x76;
  4182  0278  3076               	movlw	118
  4183  0279  1283               	bcf	3,5	;RP0=0, select bank0
  4184  027A  1303               	bcf	3,6	;RP1=0, select bank0
  4185  027B  0099               	movwf	25	;volatile
  4186  027C                     i1l1633:
  4187                           
  4188                           ;main.c: 234:     if (toggleTX == 6){
  4189  027C  3006               	movlw	6
  4190  027D  0677               	xorwf	_toggleTX,w
  4191  027E  1D03               	btfss	3,2
  4192  027F  2A81               	goto	u71_21
  4193  0280  2A82               	goto	u71_20
  4194  0281                     u71_21:
  4195  0281  2A86               	goto	i1l1637
  4196  0282                     u71_20:
  4197  0282                     i1l1635:
  4198                           
  4199                           ;main.c: 235:         TXREG = 0x2C;
  4200  0282  302C               	movlw	44
  4201  0283  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0284  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0285  0099               	movwf	25	;volatile
  4204  0286                     i1l1637:
  4205                           
  4206                           ;main.c: 237:     if (toggleTX == 7){
  4207  0286  3007               	movlw	7
  4208  0287  0677               	xorwf	_toggleTX,w
  4209  0288  1D03               	btfss	3,2
  4210  0289  2A8B               	goto	u72_21
  4211  028A  2A8C               	goto	u72_20
  4212  028B                     u72_21:
  4213  028B  2A90               	goto	i1l1641
  4214  028C                     u72_20:
  4215  028C                     i1l1639:
  4216                           
  4217                           ;main.c: 238:         TXREG = 0x20;
  4218  028C  3020               	movlw	32
  4219  028D  1283               	bcf	3,5	;RP0=0, select bank0
  4220  028E  1303               	bcf	3,6	;RP1=0, select bank0
  4221  028F  0099               	movwf	25	;volatile
  4222  0290                     i1l1641:
  4223                           
  4224                           ;main.c: 240:     if (toggleTX == 8){
  4225  0290  3008               	movlw	8
  4226  0291  0677               	xorwf	_toggleTX,w
  4227  0292  1D03               	btfss	3,2
  4228  0293  2A95               	goto	u73_21
  4229  0294  2A96               	goto	u73_20
  4230  0295                     u73_21:
  4231  0295  2A9A               	goto	i1l1645
  4232  0296                     u73_20:
  4233  0296                     i1l1643:
  4234                           
  4235                           ;main.c: 241:         TXREG = AC2;
  4236  0296  1283               	bcf	3,5	;RP0=0, select bank0
  4237  0297  1303               	bcf	3,6	;RP1=0, select bank0
  4238  0298  0845               	movf	_AC2,w
  4239  0299  0099               	movwf	25	;volatile
  4240  029A                     i1l1645:
  4241                           
  4242                           ;main.c: 243:     if (toggleTX == 9){
  4243  029A  3009               	movlw	9
  4244  029B  0677               	xorwf	_toggleTX,w
  4245  029C  1D03               	btfss	3,2
  4246  029D  2A9F               	goto	u74_21
  4247  029E  2AA0               	goto	u74_20
  4248  029F                     u74_21:
  4249  029F  2AA4               	goto	i1l1649
  4250  02A0                     u74_20:
  4251  02A0                     i1l1647:
  4252                           
  4253                           ;main.c: 244:         TXREG = 0x2E;
  4254  02A0  302E               	movlw	46
  4255  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  4256  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  4257  02A3  0099               	movwf	25	;volatile
  4258  02A4                     i1l1649:
  4259                           
  4260                           ;main.c: 246:     if (toggleTX == 10){
  4261  02A4  300A               	movlw	10
  4262  02A5  0677               	xorwf	_toggleTX,w
  4263  02A6  1D03               	btfss	3,2
  4264  02A7  2AA9               	goto	u75_21
  4265  02A8  2AAA               	goto	u75_20
  4266  02A9                     u75_21:
  4267  02A9  2AAE               	goto	i1l1653
  4268  02AA                     u75_20:
  4269  02AA                     i1l1651:
  4270                           
  4271                           ;main.c: 247:         TXREG = AD2;
  4272  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  4273  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  4274  02AC  0842               	movf	_AD2,w
  4275  02AD  0099               	movwf	25	;volatile
  4276  02AE                     i1l1653:
  4277                           
  4278                           ;main.c: 249:     if (toggleTX == 11){
  4279  02AE  300B               	movlw	11
  4280  02AF  0677               	xorwf	_toggleTX,w
  4281  02B0  1D03               	btfss	3,2
  4282  02B1  2AB3               	goto	u76_21
  4283  02B2  2AB4               	goto	u76_20
  4284  02B3                     u76_21:
  4285  02B3  2AB8               	goto	i1l1657
  4286  02B4                     u76_20:
  4287  02B4                     i1l1655:
  4288                           
  4289                           ;main.c: 250:         TXREG = AU2;
  4290  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  4291  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  4292  02B6  083F               	movf	_AU2,w
  4293  02B7  0099               	movwf	25	;volatile
  4294  02B8                     i1l1657:
  4295                           
  4296                           ;main.c: 252:     if (toggleTX == 12){
  4297  02B8  300C               	movlw	12
  4298  02B9  0677               	xorwf	_toggleTX,w
  4299  02BA  1D03               	btfss	3,2
  4300  02BB  2ABD               	goto	u77_21
  4301  02BC  2ABE               	goto	u77_20
  4302  02BD                     u77_21:
  4303  02BD  2AC2               	goto	i1l1661
  4304  02BE                     u77_20:
  4305  02BE                     i1l1659:
  4306                           
  4307                           ;main.c: 253:         TXREG = 0x76;
  4308  02BE  3076               	movlw	118
  4309  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  4310  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  4311  02C1  0099               	movwf	25	;volatile
  4312  02C2                     i1l1661:
  4313                           
  4314                           ;main.c: 255:     if (toggleTX == 13){
  4315  02C2  300D               	movlw	13
  4316  02C3  0677               	xorwf	_toggleTX,w
  4317  02C4  1D03               	btfss	3,2
  4318  02C5  2AC7               	goto	u78_21
  4319  02C6  2AC8               	goto	u78_20
  4320  02C7                     u78_21:
  4321  02C7  2ACD               	goto	i1l187
  4322  02C8                     u78_20:
  4323  02C8                     i1l1663:
  4324                           
  4325                           ;main.c: 256:         TXREG = 13;
  4326  02C8  300D               	movlw	13
  4327  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  4328  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  4329  02CB  0099               	movwf	25	;volatile
  4330  02CC                     i1l1665:
  4331                           
  4332                           ;main.c: 257:         toggleTX = 0;
  4333  02CC  01F7               	clrf	_toggleTX
  4334  02CD                     i1l187:
  4335  02CD  0008               	return
  4336  02CE                     __end_of_envio:
  4337  007E                     btemp	set	126	;btemp
  4338  007E                     wtemp0	set	126
  4339                           
  4340                           	psect	config
  4341                           
  4342                           ;Config register CONFIG1 @ 0x2007
  4343                           ;	Oscillator Selection bits
  4344                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4345                           ;	Watchdog Timer Enable bit
  4346                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4347                           ;	Power-up Timer Enable bit
  4348                           ;	PWRTE = OFF, PWRT disabled
  4349                           ;	RE3/MCLR pin function select bit
  4350                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4351                           ;	Code Protection bit
  4352                           ;	CP = OFF, Program memory code protection is disabled
  4353                           ;	Data Code Protection bit
  4354                           ;	CPD = OFF, Data memory code protection is disabled
  4355                           ;	Brown Out Reset Selection bits
  4356                           ;	BOREN = OFF, BOR disabled
  4357                           ;	Internal External Switchover bit
  4358                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4359                           ;	Fail-Safe Clock Monitor Enabled bit
  4360                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4361                           ;	Low Voltage Programming Enable bit
  4362                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4363                           ;	In-Circuit Debugger Mode bit
  4364                           ;	DEBUG = 0x1, unprogrammed default
  4365  2007                     	org	8199
  4366  2007  20D4               	dw	8404
  4367                           
  4368                           ;Config register CONFIG2 @ 0x2008
  4369                           ;	Brown-out Reset Selection bit
  4370                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4371                           ;	Flash Program Memory Self Write Enable bits
  4372                           ;	WRT = OFF, Write protection off
  4373  2008                     	org	8200
  4374  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        1
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     27      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> conver@temporal(BANK0[16]), STR_1(CODE[15]), 

    sp__conver	PTR const unsigned char  size(1) Largest target is 16
		 -> conver@temporal(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_conver
    _Setup->_ADC_init
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_String->_conver
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _LECT3->___bmul
    _LECT3->___wmul
    _LECT3->_num_ascii
    _LECT2->___bmul
    _LECT2->___wmul
    _LECT2->_num_ascii
    _LECT1->___bmul
    _LECT1->___wmul
    _LECT1->_num_ascii
    ___awdiv->___wmul
    _ADCL->_ADC_init

Critical Paths under _ISR in COMMON

    _ISR->_envio

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _Setup->_ADC_init
    _Lcd_Write_String->_conver
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _LECT3->___awdiv
    _LECT2->___awdiv
    _LECT1->___awdiv
    ___awdiv->___wmul
    _ADCL->_ADC_init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13477
                                             25 BANK0      2     2      0
                               _ADCL
                           _CONTADOR
                              _LECT1
                              _LECT2
                              _LECT3
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _Setup
                           _USARTcon
                             _conver
 ---------------------------------------------------------------------------------
 (1) _conver                                              20    18      2     868
                                              4 COMMON     2     0      2
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (1) _USARTcon                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0     332
                                              2 BANK0      1     1      0
                           _ADC_init
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     372
                                             18 BANK0      7     5      2
                     _Lcd_Write_Char
                             _conver (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     434
                                              2 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LECT3                                                4     4      0    3681
                                             13 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (1) _LECT2                                               10    10      0    3715
                                             13 BANK0     10    10      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                8     8      0    3681
                                             13 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1216
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     766
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1668
                                              4 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CONTADOR                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCL                                                 1     1      0     332
                                              2 BANK0      1     1      0
                           _ADC_init
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             4     3      1     332
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              1 COMMON     3     3      0
                              _envio
 ---------------------------------------------------------------------------------
 (5) _envio                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCL
     _ADC_init
   _CONTADOR
   _LECT1
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _num_ascii
   _LECT2
     ___awdiv
     ___bmul
     ___wmul
     _num_ascii
   _LECT3
     ___awdiv
     ___bmul
     ___wmul
     _num_ascii
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
     _conver (ARG)
   _Setup
     _ADC_init
   _USARTcon
   _conver

 _ISR (ROOT)
   _envio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3D      12        0.0%
ABS                  0      0      3D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jul 28 09:15:40 2021

                        _T 0052                          pc 0002             ___bmul@product 0020  
             ___awdiv@sign 002A                         _v1 0079                         _v2 0051  
                       fsr 0004        ___wmul@multiplicand 0022                        _AC1 0046  
                      _AC2 0045                        _AC3 0044                        _AD1 0043  
                      _AD2 0042                        _AD3 0041                        l210 01CF  
                      l202 01A9                        l211 01D4                        l220 0201  
                      l212 01D9                        l204 01AC                        l221 0206  
                      l213 01DE                        l205 01AF                        l222 020B  
                      l214 01E3                        l206 01B2                        l223 0246  
                      l215 01E8                        l216 01ED                        l208 01CA  
                      l217 01F2                        l209 0241                        l153 057E  
                      l218 01F7                        l162 01A6                        l219 01FC  
                      l403 069F                        l251 066F                        l171 04BC  
                      l228 0541                        l260 0635                        l165 00F4  
                      l159 0500                        l263 0688                        l168 034D  
                      l248 06D9                        l272 0477                        l194 05B5  
                      l530 0431                        l266 06CB                        l291 06B5  
                      l377 05F7                        l379 060F                        _AU1 0040  
                      _AU2 003F                        _AU3 003E                        u600 03FE  
                      u601 03FD                        u620 040F                        _ISR 05B6  
                      u621 040E                        u615 03FF                        u640 0423  
                      u560 03D0                        u641 0422                        u625 040B  
                      u561 03CF                        u650 0428                        u570 03DB  
                      u651 0427                        u635 0417                        u571 03DA  
                      u900 05AB                        u580 03EC                        u901 05AA  
                      u581 03EB                        u910 05B2                        u911 05B1  
                      u595 03F0                        u860 0585                        u861 0584  
                      u870 058F                        u871 058E                        u880 0596  
                      u881 0595                        u890 05A1                        u891 05A0  
                      u990 05F1                        u991 05F0                        _Un1 0049  
                      _Un2 0048                        _Un3 0047                        _res 003C  
                      fsr0 0004                        _sum 003D                        indf 0000  
                     ?_ISR 0070                       l2003 050B                       l2101 0697  
                     l2021 0511                       l2103 069E                       l2015 050F  
                     l2111 0548                       l2201 04DC                       l2033 0515  
                     l2009 050D                       l2121 0554                       l2113 054D  
                     l2211 04FD                       l2203 04E3                       l2027 0513  
                     l2131 0559                       l2123 0555                       l2115 054F  
                     l2107 0542                       l2205 04E8                       l2213 00F5  
                     l2221 0026                       l2061 0660                       l2141 055E  
                     l2133 055A                       l2125 0556                       l2117 0550  
                     l2109 0546                       l2207 04F0                       l2039 0517  
                     l2047 0519                       l2215 0185                       l2223 00D3  
                     l2231 032C                       l2063 0661                       l2055 0656  
                     l2071 06C2                       l2151 0570                       l2143 055F  
                     l2135 055B                       l2127 0557                       l2119 0551  
                     l2209 04F6                       l1601 0416                       l2081 05EB  
                     l2217 0190                       l2225 00DE                       l2233 0337  
                     l2065 066C                       l2057 065C                       l2073 06C3  
                     l2161 057D                       l2153 0573                       l2145 0562  
                     l2137 055C                       l2129 0558                       l2241 0358  
                     l1603 041D                       l2083 05F1                       l2219 019B  
                     l2227 00E9                       l2235 0342                       l2059 065F  
                     l2163 0670                       l2171 0624                       l2075 06C4  
                     l2067 06B9                       l2155 0577                       l2147 0563  
                     l2139 055D                       l2251 039B                       l2243 035D  
                     l1605 0423                       l2093 068C                       l2085 05FE  
                     l2229 02CE                       l2173 062A                       l2165 0613  
                     l2077 06C8                       l2069 06BF                       l2181 0453  
                     l2157 057B                       l2149 0564                       l2261 03B6  
                     l2253 03A1                       l2245 0367                       l2237 034E  
                     l2191 04C5                       l1607 0428                       l2095 068D  
                     l2087 0605                       l2079 05E9                       l2343 0521  
                     l2175 062F                       l2167 0618                       l2183 045B  
                     l2159 057C                       l2263 03BB                       l2255 03A7  
                     l2247 0372                       l2239 0353                       l2345 01BF  
                     l2193 04C6                       l1801 05A1                       l1609 042D  
                     l2097 0691                       l2089 060B                       l2169 061D  
                     l2177 0432                       l2185 047B                       l2265 03C0  
                     l2257 03AD                       l2249 037C                       l2347 0218  
                     l2195 04C7                       l1803 05A5                       l1571 03CC  
                     l2099 0695                       l2179 0437                       l1731 06B0  
                     l1723 06A0                       l2259 03B1                       l2197 04CC  
                     l2189 04BD                       l1805 05AB                       l1581 03E0  
                     l1573 03D0                       l1733 06B1                       l1725 06A8  
                     l2199 04D6                       l1807 05B2                       l1591 03F6  
                     l1583 03E4                       l1575 03D5                       l1735 06B2  
                     l1727 06AB                       l1809 05B3                       l1593 03FA  
                     l1585 03E6                       l1577 03D7                       l1569 03C9  
                     l1729 06AD                       l1595 03FE                       l1587 03EC  
                     l1579 03DB                       l1597 040F                       l1589 03EF  
                     l1791 0589                       l1599 0415                       l1961 01B5  
                     l1793 058F                       l1795 0596                       l1787 057F  
                     l1955 06D5                       l1965 0210                       l1957 01A8  
                     l1797 0597                       l1789 0585                       l1967 0243  
                     l1799 059B                       l1991 0507                       l1977 0504  
                     l1979 0505                       l1997 0509                       _ADCL 04BD  
                     STR_1 0646                       u1100 04C5                       u1020 060B  
                     u1101 04C4                       u1021 060A                       u1005 05F8  
                     u1110 04CC                       u1030 0691                       u1111 04CB  
                     u1031 0690                       u1015 05FF                       u1040 069E  
                     u1120 03A1                       u1041 069D                       u1121 03A0  
                     u1050 0618                       u1130 03A7                       u1051 0617  
                     u1131 03A6                       u1060 062A                       u1140 03AD  
                     _CONT 003B                       u1061 0629                       u1141 03AC  
                     u1070 0441                       u1080 0465                       u1090 0477  
                     u1091 0476                       u1157 06C6                       u1167 0667  
                     u1177 04E0                       u1187 04FA                       _TMR0 0001  
                     _Dec1 004C                       _Dec2 004B                       _Dec3 004A  
                     _Cen1 0078                       _Cen2 004E                       _Cen3 004D  
        ?_Lcd_Write_String 0032                       _main 034E                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0034           __end_of_ADC_init 0247  
          __end_of_Lcd_Cmd 0670          ___bmul@multiplier 0021           __end_of_CONTADOR 05B6  
                    ??_ISR 0071                      ?_ADCL 0070                      ?_main 0070  
          __end_of___awdiv 0432                      _ANSEL 0188            ___awdiv@divisor 0024  
                    _LECT1 00F5                      _LECT2 0026                      _LECT3 02CE  
                    i1l141 05E2                      i1l187 02CD            ___awdiv@counter 0029  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      u70_20 0278                      u70_21 0277  
                    u71_20 0282                      u71_21 0281                      u72_20 028C  
                    u72_21 028B                      u73_20 0296                      u73_21 0295  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    u74_20 02A0                      u66_20 0250                      u74_21 029F  
                    u66_21 024F                      u75_20 02AA                      u67_20 025A  
                    u75_21 02A9                      u67_21 0259                      u76_20 02B4  
                    u68_20 0264                      u92_20 05BA                      u76_21 02B3  
                    u68_21 0263                      u92_21 05B9                      u77_20 02BE  
                    u69_20 026E                      u93_20 05C9                      u77_21 02BD  
                    u69_21 026D                      u93_21 05C8                      u78_20 02C8  
                    u94_20 05D2                      u78_21 02C7                      u94_21 05D1  
                    u95_20 05DA                      u95_21 05D9                      _TXREG 0019  
                    _Setup 0542                      _anlec 004F                      _envio 0247  
                    _signo 0076           __end_of_USARTcon 06B6                      pclath 000A  
                    status 0003                      wtemp0 007E               __end_of_ADCL 0501  
         __end_of_Lcd_Init 0689           __end_of_Lcd_Port 06DA            __initialization 000F  
             __end_of_main 03C9                     ??_ADCL 0022                     ??_main 0039  
                   ?_LECT1 0070                     ?_LECT2 0070                     ?_LECT3 0070  
                   ?_Setup 0070                     _ADCON1 009F                     ?_envio 0070  
                   _ADRESH 001E           ___awdiv@dividend 0026                     _ANSELH 0189  
                   i1l1621 025E                     i1l1613 0247                     i1l1631 0278  
                   i1l1623 0264                     i1l1615 0250                     i1l1641 0290  
                   i1l1633 027C                     i1l1625 0268                     i1l1617 0254  
                   i1l1651 02AA                     i1l1643 0296                     i1l1635 0282  
                   i1l1627 026E                     i1l1619 025A                     i1l1661 02C2  
                   i1l1653 02AE                     i1l1645 029A                     i1l1637 0286  
                   i1l1629 0272                     i1l1663 02C8                     i1l1655 02B4  
                   i1l1647 02A0                     i1l1639 028C                     i1l1665 02CC  
                   i1l1657 02B8                     i1l1649 02A4                     i1l1841 05BF  
                   i1l1659 02BE                     i1l1851 05D2                     i1l1843 05C3  
                   i1l1835 05B6                     i1l1853 05D6                     i1l1845 05C9  
                   i1l1837 05BA                     i1l1855 05DA                     i1l1847 05CA  
                   i1l1839 05BB                     i1l1857 05DF                     i1l1849 05CE  
                ??_Lcd_Cmd 0020                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                   ___bmul 0689                     ___wmul 05E9                  ??___awdiv 0028  
                   _conver 0478           ___awdiv@quotient 002B                     _nowadc 0050  
                   saved_w 007E                  ?_ADC_init 0074                  ?_CONTADOR 0070  
          Lcd_Set_Cursor@a 0024            Lcd_Set_Cursor@b 0022    __end_of__initialization 0022  
            __end_of_LECT1 01A7              __end_of_LECT2 00F5              __end_of_LECT3 034E  
      ___bmul@multiplicand 0074             __pcstackCOMMON 0070              __end_of_Setup 057F  
             __pidataBANK0 06DA              __end_of_envio 02CE                  ?_USARTcon 0070  
                  ??_LECT1 002D                    ??_LECT2 002D                    ??_LECT3 002D  
           _Lcd_Set_Cursor 0610                 ??_ADC_init 0020                    ??_Setup 0022  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_envio 0070  
               ??_CONTADOR 0074                 __pbssBANK0 003B                 __pmaintext 034E  
                  ?___bmul 0074                    ?___wmul 0020                 __pintentry 0004  
                  ?_conver 0074  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 0636  
               ??_USARTcon 0074         __size_of_num_ascii 0041                 ??_Lcd_Init 0076  
               ??_Lcd_Port 0074                 __stringtab 0636             _Lcd_Write_Char 06B6  
                  _Lcd_Cmd 0655            __size_of___bmul 0017                    ___awdiv 03C9  
          __size_of___wmul 0027            __size_of_conver 0045            ?_Lcd_Set_Cursor 0022  
                  __ptext1 0478                    __ptext2 06A0                    __ptext3 0542  
                  __ptext4 0432                    __ptext5 06B6                    __ptext6 0610  
                  __ptext7 0670                    __ptext8 0655                    __ptext9 06D4  
             __size_of_ISR 0033                    clrloop0 06CD     __end_of_Lcd_Write_Char 06CC  
     end_of_initialization 0022          __end_of_num_ascii 0542                  _RCSTAbits 0018  
                Lcd_Port@a 0074                  _PORTEbits 0009            ?_Lcd_Write_Char 0070  
        __size_of_ADC_init 00A0          Lcd_Write_String@a 0032          Lcd_Write_String@i 0037  
        __size_of_CONTADOR 0037                  _TXSTAbits 0098               ADC_init@chan 0074  
           __end_of___bmul 06A0             __end_of___wmul 0610           _Lcd_Write_String 0432  
              _BAUDCTLbits 0187             __end_of_conver 04BD          __size_of_USARTcon 0016  
      start_initialization 000F                __end_of_ISR 05E9          __size_of_Lcd_Init 0019  
        __size_of_Lcd_Port 0006                   ??___bmul 0075                   ??___wmul 0074  
              __pdataBANK0 0052                   ??_conver 0020            Lcd_Write_Char@a 0020  
              __pbssCOMMON 0076                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0023                   ?___awdiv 0024  
                __pstrings 0636             __size_of_LECT1 00B2             __size_of_LECT2 00CF  
           __size_of_LECT3 0080                   _ADC_init 01A7             __size_of_Setup 003D  
           conver@temporal 0022             __size_of_envio 0087                   _CONTADOR 057F  
        interrupt_function 0004             ___wmul@product 0074                  clear_ram0 06CC  
                 _PIE1bits 008C                   Lcd_Cmd@a 0075                   _PIR1bits 000C  
                _num_ascii 0501                   _USARTcon 06A0                 _ADCON0bits 001F  
              __stringbase 0645          ___wmul@multiplier 0020           ??_Lcd_Write_Char 0075  
                conver@AC3 0021                  conver@AD3 0074                  conver@AU3 0075  
              ADC_init@vel 0075                   _Lcd_Init 0670                   _Lcd_Port 06D4  
 __end_of_Lcd_Write_String 0478           __size_of_Lcd_Cmd 001B                 ?_num_ascii 0070  
         __size_of___awdiv 0069         __end_of__stringtab 0646                 _LECT2$1143 0035  
                 __ptext10 02CE                   __ptext11 0026                   __ptext20 05B6  
                 __ptext12 00F5                   __ptext21 0247                   __ptext13 0501  
                 __ptext14 05E9                   __ptext15 0689                   __ptext16 03C9  
                 __ptext17 057F                   __ptext18 04BD                   __ptext19 01A7  
            __size_of_ADCL 0044              __size_of_main 007B                   _toggleTX 0077  
               _INTCONbits 000B                   intlevel1 0000               num_ascii@num 0020  
                stringcode 0640                 _OSCCONbits 008F                ??_num_ascii 0074  
       Lcd_Set_Cursor@temp 0025                 _OPTION_REG 0081                   stringdir 0640  
                 stringtab 0636  
